// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module WBSlave_getLog (
        ap_clk,
        ap_rst,
        WBSlave_log_in,
        WBSlave_log_out,
        WBSlave_log_out_ap_vld,
        WBSlave_log_start_V_i,
        WBSlave_log_start_V_o,
        WBSlave_log_start_V_o_ap_vld,
        WBSlave_log_done_V,
        WBSlave_log_done_V_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st2_fsm_1 = 66'b10;
parameter    ap_ST_st3_fsm_2 = 66'b100;
parameter    ap_ST_st4_fsm_3 = 66'b1000;
parameter    ap_ST_st5_fsm_4 = 66'b10000;
parameter    ap_ST_st6_fsm_5 = 66'b100000;
parameter    ap_ST_st7_fsm_6 = 66'b1000000;
parameter    ap_ST_st8_fsm_7 = 66'b10000000;
parameter    ap_ST_st9_fsm_8 = 66'b100000000;
parameter    ap_ST_st10_fsm_9 = 66'b1000000000;
parameter    ap_ST_st11_fsm_10 = 66'b10000000000;
parameter    ap_ST_st12_fsm_11 = 66'b100000000000;
parameter    ap_ST_st13_fsm_12 = 66'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 66'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 66'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 66'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 66'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 66'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 66'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 66'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 66'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 66'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 66'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 66'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 66'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 66'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 66'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 66'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 66'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 66'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 66'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 66'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 66'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 66'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 66'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 66'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 66'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 66'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 66'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 66'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 66'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 66'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 66'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 66'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 66'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 66'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 66'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 66'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 66'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 66'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 66'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 66'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 66'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 66'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 66'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 66'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 66'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 66'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 66'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 66'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 66'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 66'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 66'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 66'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 66'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 66'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_38 = 32'b111000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_27 = 32'b100111;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2A = 32'b101010;
parameter    ap_const_lv32_2C = 32'b101100;
parameter    ap_const_lv32_2E = 32'b101110;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_32 = 32'b110010;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_41 = 32'b1000001;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_BF800000 = 32'b10111111100000000000000000000000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_39 = 32'b111001;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv64_3FB999999999999A = 64'b11111110111001100110011001100110011001100110011001100110011010;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_11 = 5'b10001;
parameter    ap_const_lv6_23 = 6'b100011;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_const_lv5_2 = 5'b10;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input  [31:0] WBSlave_log_in;
output  [31:0] WBSlave_log_out;
output   WBSlave_log_out_ap_vld;
input  [0:0] WBSlave_log_start_V_i;
output  [0:0] WBSlave_log_start_V_o;
output   WBSlave_log_start_V_o_ap_vld;
output  [0:0] WBSlave_log_done_V;
output   WBSlave_log_done_V_ap_vld;

reg[31:0] WBSlave_log_out;
reg WBSlave_log_out_ap_vld;
reg[0:0] WBSlave_log_done_V;
reg WBSlave_log_done_V_ap_vld;
reg   [5:0] inputLUT_address0;
reg    inputLUT_ce0;
wire   [31:0] inputLUT_q0;
wire   [5:0] logLUT_address0;
reg    logLUT_ce0;
wire   [31:0] logLUT_q0;
wire   [5:0] gradientLUT_address0;
reg    gradientLUT_ce0;
wire   [31:0] gradientLUT_q0;
wire   [5:0] offsetLUT_address0;
reg    offsetLUT_ce0;
wire   [31:0] offsetLUT_q0;
wire   [31:0] grp_fu_340_p2;
reg   [31:0] reg_375;
(* fsm_encoding = "none" *) reg   [65:0] ap_CS_fsm = 66'b10;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_117;
reg    ap_sig_cseq_ST_st57_fsm_56;
reg    ap_sig_bdd_125;
wire   [0:0] WBSlave_log_start_V_read_read_fu_196_p2;
reg   [0:0] WBSlave_log_start_V_read_reg_591;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_135;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_148;
wire   [63:0] grp_fu_355_p1;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_157;
wire   [0:0] tmp_69_fu_417_p2;
reg   [0:0] tmp_69_reg_610;
wire   [31:0] WBSlave_log_in_load_to_int_fu_428_p1;
reg   [31:0] WBSlave_log_in_load_to_int_reg_618;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_168;
wire   [0:0] tmp_71_fu_423_p2;
wire   [0:0] notrhs7_fu_435_p2;
reg   [0:0] notrhs7_reg_623;
wire   [31:0] grp_fu_333_p2;
reg   [31:0] x_reg_628;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_183;
wire   [31:0] grp_fu_351_p1;
reg   [31:0] tmp_72_reg_636;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_192;
reg   [31:0] power_1_reg_641;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_200;
wire   [31:0] grp_fu_346_p2;
reg   [31:0] tmp_73_reg_647;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_209;
wire   [0:0] tmp_64_fu_447_p1;
reg   [0:0] tmp_64_reg_652;
reg   [31:0] sum_2_reg_656;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_bdd_219;
wire   [4:0] i_12_fu_451_p2;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_bdd_228;
reg   [31:0] sum_3_reg_666;
reg    ap_sig_cseq_ST_st40_fsm_39;
reg    ap_sig_bdd_236;
wire   [0:0] tmp_s_fu_457_p2;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_245;
wire   [5:0] i_11_fu_463_p2;
reg   [5:0] i_11_reg_675;
wire   [63:0] tmp_66_fu_469_p1;
reg   [63:0] tmp_66_reg_681;
wire   [0:0] tmp_76_fu_489_p2;
reg   [0:0] tmp_76_reg_693;
reg   [31:0] inputLUT_load_reg_698;
reg    ap_sig_cseq_ST_st43_fsm_42;
reg    ap_sig_bdd_264;
wire   [0:0] tmp_82_fu_529_p2;
reg   [0:0] tmp_82_reg_704;
reg    ap_sig_cseq_ST_st45_fsm_44;
reg    ap_sig_bdd_273;
wire   [0:0] grp_fu_370_p2;
reg   [0:0] tmp_86_reg_718;
reg    ap_sig_cseq_ST_st47_fsm_46;
reg    ap_sig_bdd_288;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_bdd_299;
wire   [0:0] tmp_88_fu_569_p2;
reg   [0:0] tmp_88_reg_732;
reg    ap_sig_cseq_ST_st50_fsm_49;
reg    ap_sig_bdd_310;
wire   [0:0] tmp_90_fu_575_p2;
reg    ap_sig_cseq_ST_st51_fsm_50;
reg    ap_sig_bdd_327;
reg   [31:0] offsetLUT_load_reg_755;
reg   [4:0] i_1_reg_273;
reg   [31:0] power_reg_285;
reg   [31:0] sum_reg_297;
reg   [31:0] sum_1_phi_fu_314_p4;
reg   [5:0] i_reg_321;
wire   [63:0] tmp_68_fu_535_p1;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_356;
wire   [0:0] exitcond_fu_441_p2;
reg    ap_sig_cseq_ST_st62_fsm_61;
reg    ap_sig_bdd_367;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_bdd_375;
reg    ap_sig_cseq_ST_st66_fsm_65;
reg    ap_sig_bdd_383;
wire   [0:0] tmp_81_fu_580_p2;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_bdd_395;
reg   [31:0] grp_fu_333_p0;
reg   [31:0] grp_fu_333_p1;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_408;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_415;
reg    ap_sig_cseq_ST_st58_fsm_57;
reg    ap_sig_bdd_423;
reg   [31:0] grp_fu_340_p0;
reg   [31:0] grp_fu_340_p1;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_432;
wire   [31:0] grp_fu_346_p0;
wire   [31:0] grp_fu_346_p1;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_441;
wire   [4:0] grp_fu_351_p0;
wire   [31:0] grp_fu_355_p0;
wire   [31:0] grp_fu_359_p0;
reg   [31:0] grp_fu_359_p1;
wire   [63:0] grp_fu_364_p0;
wire   [63:0] grp_fu_364_p1;
reg   [0:0] grp_fu_370_p0;
wire   [0:0] grp_fu_359_p2;
wire   [63:0] tmp_to_int_fu_387_p1;
wire   [10:0] tmp_67_fu_391_p4;
wire   [51:0] tmp_61_fu_401_p1;
wire   [0:0] notrhs_fu_411_p2;
wire   [0:0] notlhs_fu_405_p2;
wire   [0:0] grp_fu_364_p2;
wire   [22:0] tmp_62_fu_431_p1;
wire   [7:0] tmp_74_fu_474_p4;
wire   [0:0] notlhs6_fu_483_p2;
wire   [31:0] inputLUT_load_to_int_fu_494_p1;
wire   [7:0] tmp_75_fu_497_p4;
wire   [22:0] tmp_63_fu_507_p1;
wire   [0:0] notrhs9_fu_517_p2;
wire   [0:0] notlhs8_fu_511_p2;
wire   [0:0] tmp_77_fu_523_p2;
wire   [31:0] inputLUT_load_1_to_int_fu_539_p1;
wire   [7:0] tmp_87_fu_543_p4;
wire   [22:0] tmp_65_fu_553_p1;
wire   [0:0] notrhs1_fu_563_p2;
wire   [0:0] notlhs1_fu_557_p2;
reg   [1:0] grp_fu_333_opcode;
wire    grp_fu_333_ce;
wire    grp_fu_340_ce;
wire    grp_fu_346_ce;
wire    grp_fu_351_ce;
wire    grp_fu_355_ce;
wire    grp_fu_359_ce;
reg   [4:0] grp_fu_359_opcode;
wire    grp_fu_364_ce;
wire   [4:0] grp_fu_364_opcode;
reg   [65:0] ap_NS_fsm;


WBSlave_getLog_inputLUT #(
    .DataWidth( 32 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
inputLUT_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( inputLUT_address0 ),
    .ce0( inputLUT_ce0 ),
    .q0( inputLUT_q0 )
);

WBSlave_getLog_logLUT #(
    .DataWidth( 32 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
logLUT_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( logLUT_address0 ),
    .ce0( logLUT_ce0 ),
    .q0( logLUT_q0 )
);

WBSlave_getLog_gradientLUT #(
    .DataWidth( 32 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
gradientLUT_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( gradientLUT_address0 ),
    .ce0( gradientLUT_ce0 ),
    .q0( gradientLUT_q0 )
);

WBSlave_getLog_offsetLUT #(
    .DataWidth( 32 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
offsetLUT_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( offsetLUT_address0 ),
    .ce0( offsetLUT_ce0 ),
    .q0( offsetLUT_q0 )
);

WBSlave_faddfsub_32ns_32ns_32_4_no_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WBSlave_faddfsub_32ns_32ns_32_4_no_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_333_p0 ),
    .din1( grp_fu_333_p1 ),
    .opcode( grp_fu_333_opcode ),
    .ce( grp_fu_333_ce ),
    .dout( grp_fu_333_p2 )
);

WBSlave_fmul_32ns_32ns_32_7_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WBSlave_fmul_32ns_32ns_32_7_max_dsp_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_340_p0 ),
    .din1( grp_fu_340_p1 ),
    .ce( grp_fu_340_ce ),
    .dout( grp_fu_340_p2 )
);

WBSlave_fdiv_32ns_32ns_32_10 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
WBSlave_fdiv_32ns_32ns_32_10_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_346_p0 ),
    .din1( grp_fu_346_p1 ),
    .ce( grp_fu_346_ce ),
    .dout( grp_fu_346_p2 )
);

WBSlave_uitofp_5ns_32_4 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
WBSlave_uitofp_5ns_32_4_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_351_p0 ),
    .ce( grp_fu_351_ce ),
    .dout( grp_fu_351_p1 )
);

WBSlave_fpext_32ns_64_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
WBSlave_fpext_32ns_64_3_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_355_p0 ),
    .ce( grp_fu_355_ce ),
    .dout( grp_fu_355_p1 )
);

WBSlave_fcmp_32ns_32ns_1_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
WBSlave_fcmp_32ns_32ns_1_3_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_359_p0 ),
    .din1( grp_fu_359_p1 ),
    .ce( grp_fu_359_ce ),
    .opcode( grp_fu_359_opcode ),
    .dout( grp_fu_359_p2 )
);

WBSlave_dcmp_64ns_64ns_1_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
WBSlave_dcmp_64ns_64ns_1_3_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_364_p0 ),
    .din1( grp_fu_364_p1 ),
    .ce( grp_fu_364_ce ),
    .opcode( grp_fu_364_opcode ),
    .dout( grp_fu_364_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st2_fsm_1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        i_1_reg_273 <= i_12_fu_451_p2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        i_1_reg_273 <= ap_const_lv5_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_71_fu_423_p2))) begin
        i_reg_321 <= ap_const_lv6_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49) & ((ap_const_lv1_0 == tmp_86_reg_718) | (ap_const_lv1_0 == tmp_90_fu_575_p2)))) begin
        i_reg_321 <= i_11_reg_675;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        power_reg_285 <= power_1_reg_641;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        power_reg_285 <= ap_const_lv32_3F800000;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        sum_reg_297 <= sum_1_phi_fu_314_p4;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        sum_reg_297 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & ~(ap_const_lv1_0 == tmp_71_fu_423_p2))) begin
        WBSlave_log_in_load_to_int_reg_618 <= WBSlave_log_in_load_to_int_fu_428_p1;
        notrhs7_reg_623 <= notrhs7_fu_435_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(WBSlave_log_start_V_read_read_fu_196_p2 == ap_const_lv1_0))) begin
        WBSlave_log_start_V_read_reg_591 <= WBSlave_log_start_V_i;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        i_11_reg_675 <= i_11_fu_463_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        inputLUT_load_reg_698 <= inputLUT_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        offsetLUT_load_reg_755 <= offsetLUT_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        power_1_reg_641 <= grp_fu_340_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st57_fsm_56))) begin
        reg_375 <= grp_fu_340_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        sum_2_reg_656 <= grp_fu_333_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st40_fsm_39)) begin
        sum_3_reg_666 <= grp_fu_333_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        tmp_64_reg_652 <= tmp_64_fu_447_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~(ap_const_lv1_0 == tmp_s_fu_457_p2))) begin
        tmp_66_reg_681[0] <= tmp_66_fu_469_p1[0];
tmp_66_reg_681[1] <= tmp_66_fu_469_p1[1];
tmp_66_reg_681[2] <= tmp_66_fu_469_p1[2];
tmp_66_reg_681[3] <= tmp_66_fu_469_p1[3];
tmp_66_reg_681[4] <= tmp_66_fu_469_p1[4];
tmp_66_reg_681[5] <= tmp_66_fu_469_p1[5];
        tmp_76_reg_693 <= tmp_76_fu_489_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        tmp_69_reg_610 <= tmp_69_fu_417_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        tmp_72_reg_636 <= grp_fu_351_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        tmp_73_reg_647 <= grp_fu_346_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        tmp_82_reg_704 <= tmp_82_fu_529_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        tmp_86_reg_718 <= grp_fu_370_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        tmp_88_reg_732 <= tmp_88_fu_569_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        x_reg_628 <= grp_fu_333_p2;
    end
end

/// WBSlave_log_done_V assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_10 or exitcond_fu_441_p2 or ap_sig_cseq_ST_st62_fsm_61 or ap_sig_cseq_ST_st64_fsm_63 or ap_sig_cseq_ST_st66_fsm_65 or tmp_81_fu_580_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65) & ~(tmp_81_fu_580_p2 == ap_const_lv1_0))) begin
        WBSlave_log_done_V = ap_const_lv1_0;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == exitcond_fu_441_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63))) begin
        WBSlave_log_done_V = ap_const_lv1_1;
    end else begin
        WBSlave_log_done_V = 'bx;
    end
end

/// WBSlave_log_done_V_ap_vld assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_10 or exitcond_fu_441_p2 or ap_sig_cseq_ST_st62_fsm_61 or ap_sig_cseq_ST_st64_fsm_63 or ap_sig_cseq_ST_st66_fsm_65 or tmp_81_fu_580_p2)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == exitcond_fu_441_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st62_fsm_61) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63) | ((ap_const_logic_1 == ap_sig_cseq_ST_st66_fsm_65) & ~(tmp_81_fu_580_p2 == ap_const_lv1_0)))) begin
        WBSlave_log_done_V_ap_vld = ap_const_logic_1;
    end else begin
        WBSlave_log_done_V_ap_vld = ap_const_logic_0;
    end
end

/// WBSlave_log_out assign process. ///
always @ (logLUT_q0 or grp_fu_333_p2 or sum_reg_297 or ap_sig_cseq_ST_st11_fsm_10 or exitcond_fu_441_p2 or ap_sig_cseq_ST_st64_fsm_63 or ap_sig_cseq_ST_st61_fsm_60)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        WBSlave_log_out = logLUT_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        WBSlave_log_out = grp_fu_333_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == exitcond_fu_441_p2))) begin
        WBSlave_log_out = sum_reg_297;
    end else begin
        WBSlave_log_out = 'bx;
    end
end

/// WBSlave_log_out_ap_vld assign process. ///
always @ (ap_sig_cseq_ST_st11_fsm_10 or exitcond_fu_441_p2 or ap_sig_cseq_ST_st64_fsm_63 or ap_sig_cseq_ST_st61_fsm_60)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(ap_const_lv1_0 == exitcond_fu_441_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63) | (ap_const_logic_1 == ap_sig_cseq_ST_st61_fsm_60))) begin
        WBSlave_log_out_ap_vld = ap_const_logic_1;
    end else begin
        WBSlave_log_out_ap_vld = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_183)
begin
    if (ap_sig_bdd_183) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_356)
begin
    if (ap_sig_bdd_356) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st14_fsm_13 assign process. ///
always @ (ap_sig_bdd_192)
begin
    if (ap_sig_bdd_192) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_441)
begin
    if (ap_sig_bdd_441) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st17_fsm_16 assign process. ///
always @ (ap_sig_bdd_200)
begin
    if (ap_sig_bdd_200) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_209)
begin
    if (ap_sig_bdd_209) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_432)
begin
    if (ap_sig_bdd_432) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_135)
begin
    if (ap_sig_bdd_135) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st31_fsm_30 assign process. ///
always @ (ap_sig_bdd_117)
begin
    if (ap_sig_bdd_117) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_408)
begin
    if (ap_sig_bdd_408) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st35_fsm_34 assign process. ///
always @ (ap_sig_bdd_219)
begin
    if (ap_sig_bdd_219) begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st36_fsm_35 assign process. ///
always @ (ap_sig_bdd_228)
begin
    if (ap_sig_bdd_228) begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_415)
begin
    if (ap_sig_bdd_415) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_148)
begin
    if (ap_sig_bdd_148) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st40_fsm_39 assign process. ///
always @ (ap_sig_bdd_236)
begin
    if (ap_sig_bdd_236) begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st40_fsm_39 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_245)
begin
    if (ap_sig_bdd_245) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st43_fsm_42 assign process. ///
always @ (ap_sig_bdd_264)
begin
    if (ap_sig_bdd_264) begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st43_fsm_42 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st45_fsm_44 assign process. ///
always @ (ap_sig_bdd_273)
begin
    if (ap_sig_bdd_273) begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st45_fsm_44 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st47_fsm_46 assign process. ///
always @ (ap_sig_bdd_288)
begin
    if (ap_sig_bdd_288) begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st47_fsm_46 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st48_fsm_47 assign process. ///
always @ (ap_sig_bdd_299)
begin
    if (ap_sig_bdd_299) begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st50_fsm_49 assign process. ///
always @ (ap_sig_bdd_310)
begin
    if (ap_sig_bdd_310) begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st50_fsm_49 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st51_fsm_50 assign process. ///
always @ (ap_sig_bdd_327)
begin
    if (ap_sig_bdd_327) begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st51_fsm_50 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st57_fsm_56 assign process. ///
always @ (ap_sig_bdd_125)
begin
    if (ap_sig_bdd_125) begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st57_fsm_56 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st58_fsm_57 assign process. ///
always @ (ap_sig_bdd_423)
begin
    if (ap_sig_bdd_423) begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st58_fsm_57 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_157)
begin
    if (ap_sig_bdd_157) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st61_fsm_60 assign process. ///
always @ (ap_sig_bdd_395)
begin
    if (ap_sig_bdd_395) begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st62_fsm_61 assign process. ///
always @ (ap_sig_bdd_367)
begin
    if (ap_sig_bdd_367) begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_61 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st64_fsm_63 assign process. ///
always @ (ap_sig_bdd_375)
begin
    if (ap_sig_bdd_375) begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st66_fsm_65 assign process. ///
always @ (ap_sig_bdd_383)
begin
    if (ap_sig_bdd_383) begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st66_fsm_65 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_168)
begin
    if (ap_sig_bdd_168) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// gradientLUT_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st50_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        gradientLUT_ce0 = ap_const_logic_1;
    end else begin
        gradientLUT_ce0 = ap_const_logic_0;
    end
end

/// grp_fu_333_opcode assign process. ///
always @ (ap_sig_cseq_ST_st7_fsm_6 or tmp_71_fu_423_p2 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st58_fsm_57)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        grp_fu_333_opcode = ap_const_lv2_1;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36) | (ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) & (ap_const_lv1_0 == tmp_71_fu_423_p2)))) begin
        grp_fu_333_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_333_opcode = 'bx;
    end
end

/// grp_fu_333_p0 assign process. ///
always @ (WBSlave_log_in or reg_375 or ap_sig_cseq_ST_st7_fsm_6 or sum_reg_297 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st58_fsm_57)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        grp_fu_333_p0 = reg_375;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        grp_fu_333_p0 = sum_reg_297;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_333_p0 = WBSlave_log_in;
    end else begin
        grp_fu_333_p0 = 'bx;
    end
end

/// grp_fu_333_p1 assign process. ///
always @ (reg_375 or ap_sig_cseq_ST_st7_fsm_6 or offsetLUT_load_reg_755 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st37_fsm_36 or ap_sig_cseq_ST_st58_fsm_57)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st58_fsm_57)) begin
        grp_fu_333_p1 = offsetLUT_load_reg_755;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36))) begin
        grp_fu_333_p1 = reg_375;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_333_p1 = ap_const_lv32_BF800000;
    end else begin
        grp_fu_333_p1 = 'bx;
    end
end

/// grp_fu_340_p0 assign process. ///
always @ (gradientLUT_q0 or tmp_73_reg_647 or ap_sig_cseq_ST_st51_fsm_50 or power_reg_285 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        grp_fu_340_p0 = gradientLUT_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_340_p0 = tmp_73_reg_647;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_340_p0 = power_reg_285;
    end else begin
        grp_fu_340_p0 = 'bx;
    end
end

/// grp_fu_340_p1 assign process. ///
always @ (WBSlave_log_in or x_reg_628 or power_1_reg_641 or ap_sig_cseq_ST_st51_fsm_50 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st25_fsm_24)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st51_fsm_50)) begin
        grp_fu_340_p1 = WBSlave_log_in;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        grp_fu_340_p1 = power_1_reg_641;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        grp_fu_340_p1 = x_reg_628;
    end else begin
        grp_fu_340_p1 = 'bx;
    end
end

/// grp_fu_359_opcode assign process. ///
always @ (ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st45_fsm_44 or grp_fu_370_p2 or ap_sig_cseq_ST_st48_fsm_47)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        grp_fu_359_opcode = ap_const_lv5_4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44) & (ap_const_lv1_0 == grp_fu_370_p2))) begin
        grp_fu_359_opcode = ap_const_lv5_2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42)) begin
        grp_fu_359_opcode = ap_const_lv5_1;
    end else begin
        grp_fu_359_opcode = 'bx;
    end
end

/// grp_fu_359_p1 assign process. ///
always @ (inputLUT_q0 or inputLUT_load_reg_698 or ap_sig_cseq_ST_st43_fsm_42 or ap_sig_cseq_ST_st45_fsm_44 or ap_sig_cseq_ST_st48_fsm_47)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        grp_fu_359_p1 = inputLUT_load_reg_698;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st43_fsm_42) | (ap_const_logic_1 == ap_sig_cseq_ST_st48_fsm_47))) begin
        grp_fu_359_p1 = inputLUT_q0;
    end else begin
        grp_fu_359_p1 = 'bx;
    end
end

/// grp_fu_370_p0 assign process. ///
always @ (tmp_82_fu_529_p2 or tmp_82_reg_704 or ap_sig_cseq_ST_st45_fsm_44 or ap_sig_cseq_ST_st47_fsm_46)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        grp_fu_370_p0 = tmp_82_reg_704;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        grp_fu_370_p0 = tmp_82_fu_529_p2;
    end else begin
        grp_fu_370_p0 = 'bx;
    end
end

/// inputLUT_address0 assign process. ///
always @ (ap_sig_cseq_ST_st42_fsm_41 or tmp_66_fu_469_p1 or ap_sig_cseq_ST_st47_fsm_46 or tmp_68_fu_535_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46)) begin
        inputLUT_address0 = tmp_68_fu_535_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        inputLUT_address0 = tmp_66_fu_469_p1;
    end else begin
        inputLUT_address0 = 'bx;
    end
end

/// inputLUT_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st42_fsm_41 or ap_sig_cseq_ST_st47_fsm_46)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) | (ap_const_logic_1 == ap_sig_cseq_ST_st47_fsm_46))) begin
        inputLUT_ce0 = ap_const_logic_1;
    end else begin
        inputLUT_ce0 = ap_const_logic_0;
    end
end

/// logLUT_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st45_fsm_44)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st45_fsm_44)) begin
        logLUT_ce0 = ap_const_logic_1;
    end else begin
        logLUT_ce0 = ap_const_logic_0;
    end
end

/// offsetLUT_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st50_fsm_49)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st50_fsm_49)) begin
        offsetLUT_ce0 = ap_const_logic_1;
    end else begin
        offsetLUT_ce0 = ap_const_logic_0;
    end
end

/// sum_1_phi_fu_314_p4 assign process. ///
always @ (tmp_64_reg_652 or sum_2_reg_656 or ap_sig_cseq_ST_st36_fsm_35 or sum_3_reg_666)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        if (~(ap_const_lv1_0 == tmp_64_reg_652)) begin
            sum_1_phi_fu_314_p4 = sum_3_reg_666;
        end else if ((ap_const_lv1_0 == tmp_64_reg_652)) begin
            sum_1_phi_fu_314_p4 = sum_2_reg_656;
        end else begin
            sum_1_phi_fu_314_p4 = 'bx;
        end
    end else begin
        sum_1_phi_fu_314_p4 = 'bx;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or WBSlave_log_start_V_read_read_fu_196_p2 or tmp_71_fu_423_p2 or tmp_64_fu_447_p1 or tmp_s_fu_457_p2 or grp_fu_370_p2 or tmp_86_reg_718 or tmp_90_fu_575_p2 or exitcond_fu_441_p2 or tmp_81_fu_580_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st2_fsm_1 : 
        begin
            if (~(WBSlave_log_start_V_read_read_fu_196_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            if (~(ap_const_lv1_0 == tmp_71_fu_423_p2)) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_st8_fsm_7;
            end
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_441_p2)) begin
                ap_NS_fsm = ap_ST_st41_fsm_40;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            if (~(ap_const_lv1_0 == tmp_64_fu_447_p1)) begin
                ap_NS_fsm = ap_ST_st37_fsm_36;
            end else begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st42_fsm_41 : 
        begin
            if ((ap_const_lv1_0 == tmp_s_fu_457_p2)) begin
                ap_NS_fsm = ap_ST_st63_fsm_62;
            end else begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            if (~(ap_const_lv1_0 == grp_fu_370_p2)) begin
                ap_NS_fsm = ap_ST_st64_fsm_63;
            end else begin
                ap_NS_fsm = ap_ST_st46_fsm_45;
            end
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            if ((ap_const_lv1_0 == grp_fu_370_p2)) begin
                ap_NS_fsm = ap_ST_st50_fsm_49;
            end else begin
                ap_NS_fsm = ap_ST_st48_fsm_47;
            end
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            if (((ap_const_lv1_0 == tmp_86_reg_718) | (ap_const_lv1_0 == tmp_90_fu_575_p2))) begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end else begin
                ap_NS_fsm = ap_ST_st51_fsm_50;
            end
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st66_fsm_65 : 
        begin
            if (~(tmp_81_fu_580_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st66_fsm_65;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign WBSlave_log_in_load_to_int_fu_428_p1 = WBSlave_log_in;
assign WBSlave_log_start_V_o = ap_const_lv1_0;
assign WBSlave_log_start_V_o_ap_vld = ap_const_logic_0;
assign WBSlave_log_start_V_read_read_fu_196_p2 = WBSlave_log_start_V_i;

/// ap_sig_bdd_117 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_117 = (ap_CS_fsm[ap_const_lv32_1E] == ap_const_lv1_1);
end

/// ap_sig_bdd_125 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_125 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_38]);
end

/// ap_sig_bdd_135 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_135 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_148 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_148 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_157 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_157 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_168 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_168 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_183 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_183 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_192 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_192 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end

/// ap_sig_bdd_200 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_200 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end

/// ap_sig_bdd_209 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_209 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_219 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_219 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_22]);
end

/// ap_sig_bdd_228 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_228 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_23]);
end

/// ap_sig_bdd_236 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_236 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_27]);
end

/// ap_sig_bdd_245 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_245 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_264 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_264 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2A]);
end

/// ap_sig_bdd_273 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_273 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2C]);
end

/// ap_sig_bdd_288 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_288 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2E]);
end

/// ap_sig_bdd_299 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_299 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2F]);
end

/// ap_sig_bdd_310 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_310 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_31]);
end

/// ap_sig_bdd_327 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_327 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_32]);
end

/// ap_sig_bdd_356 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_356 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_367 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_367 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3D]);
end

/// ap_sig_bdd_375 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_375 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_383 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_383 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_41]);
end

/// ap_sig_bdd_395 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_395 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3C]);
end

/// ap_sig_bdd_408 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_408 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_415 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_415 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_423 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_423 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_39]);
end

/// ap_sig_bdd_432 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_432 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_441 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_441 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end
assign exitcond_fu_441_p2 = (i_1_reg_273 == ap_const_lv5_11? 1'b1: 1'b0);
assign gradientLUT_address0 = tmp_66_reg_681;
assign grp_fu_333_ce = ap_const_logic_1;
assign grp_fu_340_ce = ap_const_logic_1;
assign grp_fu_346_ce = ap_const_logic_1;
assign grp_fu_346_p0 = ap_const_lv32_3F800000;
assign grp_fu_346_p1 = tmp_72_reg_636;
assign grp_fu_351_ce = ap_const_logic_1;
assign grp_fu_351_p0 = i_1_reg_273;
assign grp_fu_355_ce = ap_const_logic_1;
assign grp_fu_355_p0 = WBSlave_log_in;
assign grp_fu_359_ce = ap_const_logic_1;
assign grp_fu_359_p0 = WBSlave_log_in;
assign grp_fu_364_ce = ap_const_logic_1;
assign grp_fu_364_opcode = ap_const_lv5_4;
assign grp_fu_364_p0 = grp_fu_355_p1;
assign grp_fu_364_p1 = ap_const_lv64_3FB999999999999A;
assign grp_fu_370_p2 = (grp_fu_370_p0 & grp_fu_359_p2);
assign i_11_fu_463_p2 = (i_reg_321 + ap_const_lv6_1);
assign i_12_fu_451_p2 = (i_1_reg_273 + ap_const_lv5_1);
assign inputLUT_load_1_to_int_fu_539_p1 = inputLUT_q0;
assign inputLUT_load_to_int_fu_494_p1 = inputLUT_load_reg_698;
assign logLUT_address0 = tmp_66_reg_681;
assign notlhs1_fu_557_p2 = (tmp_87_fu_543_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs6_fu_483_p2 = (tmp_74_fu_474_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs8_fu_511_p2 = (tmp_75_fu_497_p4 != ap_const_lv8_FF? 1'b1: 1'b0);
assign notlhs_fu_405_p2 = (tmp_67_fu_391_p4 != ap_const_lv11_7FF? 1'b1: 1'b0);
assign notrhs1_fu_563_p2 = (tmp_65_fu_553_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs7_fu_435_p2 = (tmp_62_fu_431_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs9_fu_517_p2 = (tmp_63_fu_507_p1 == ap_const_lv23_0? 1'b1: 1'b0);
assign notrhs_fu_411_p2 = (tmp_61_fu_401_p1 == ap_const_lv52_0? 1'b1: 1'b0);
assign offsetLUT_address0 = tmp_66_reg_681;
assign tmp_61_fu_401_p1 = tmp_to_int_fu_387_p1[51:0];
assign tmp_62_fu_431_p1 = WBSlave_log_in_load_to_int_fu_428_p1[22:0];
assign tmp_63_fu_507_p1 = inputLUT_load_to_int_fu_494_p1[22:0];
assign tmp_64_fu_447_p1 = i_1_reg_273[0:0];
assign tmp_65_fu_553_p1 = inputLUT_load_1_to_int_fu_539_p1[22:0];
assign tmp_66_fu_469_p1 = i_reg_321;
assign tmp_67_fu_391_p4 = {{tmp_to_int_fu_387_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign tmp_68_fu_535_p1 = i_11_reg_675;
assign tmp_69_fu_417_p2 = (notrhs_fu_411_p2 | notlhs_fu_405_p2);
assign tmp_71_fu_423_p2 = (tmp_69_reg_610 & grp_fu_364_p2);
assign tmp_74_fu_474_p4 = {{WBSlave_log_in_load_to_int_reg_618[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_75_fu_497_p4 = {{inputLUT_load_to_int_fu_494_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_76_fu_489_p2 = (notrhs7_reg_623 | notlhs6_fu_483_p2);
assign tmp_77_fu_523_p2 = (notrhs9_fu_517_p2 | notlhs8_fu_511_p2);
assign tmp_81_fu_580_p2 = (WBSlave_log_start_V_read_reg_591 ^ ap_const_lv1_1);
assign tmp_82_fu_529_p2 = (tmp_76_reg_693 & tmp_77_fu_523_p2);
assign tmp_87_fu_543_p4 = {{inputLUT_load_1_to_int_fu_539_p1[ap_const_lv32_1E : ap_const_lv32_17]}};
assign tmp_88_fu_569_p2 = (notrhs1_fu_563_p2 | notlhs1_fu_557_p2);
assign tmp_90_fu_575_p2 = (tmp_88_reg_732 & grp_fu_359_p2);
assign tmp_s_fu_457_p2 = (i_reg_321 < ap_const_lv6_23? 1'b1: 1'b0);
assign tmp_to_int_fu_387_p1 = grp_fu_355_p1;
always @ (posedge ap_clk)
begin
    tmp_66_reg_681[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end



endmodule //WBSlave_getLog

