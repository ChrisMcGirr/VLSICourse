// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module WBSlave_getLog (
        ap_clk,
        ap_rst,
        WBSlave_log_in_V,
        WBSlave_log_out_V,
        WBSlave_log_out_V_ap_vld,
        WBSlave_log_start_V_i,
        WBSlave_log_start_V_o,
        WBSlave_log_start_V_o_ap_vld,
        WBSlave_log_done_V,
        WBSlave_log_done_V_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st2_fsm_1 = 97'b10;
parameter    ap_ST_st3_fsm_2 = 97'b100;
parameter    ap_ST_st4_fsm_3 = 97'b1000;
parameter    ap_ST_st5_fsm_4 = 97'b10000;
parameter    ap_ST_st6_fsm_5 = 97'b100000;
parameter    ap_ST_st7_fsm_6 = 97'b1000000;
parameter    ap_ST_st8_fsm_7 = 97'b10000000;
parameter    ap_ST_st9_fsm_8 = 97'b100000000;
parameter    ap_ST_st10_fsm_9 = 97'b1000000000;
parameter    ap_ST_st11_fsm_10 = 97'b10000000000;
parameter    ap_ST_st12_fsm_11 = 97'b100000000000;
parameter    ap_ST_st13_fsm_12 = 97'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 97'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 97'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 97'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 97'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 97'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 97'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 97'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 97'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 97'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 97'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 97'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 97'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 97'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 97'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 97'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 97'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 97'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 97'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 97'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 97'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 97'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 97'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 97'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 97'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 97'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 97'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 97'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 97'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 97'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 97'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 97'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 97'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 97'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 97'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 97'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 97'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 97'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 97'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 97'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 97'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 97'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 97'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 97'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 97'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 97'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 97'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 97'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 97'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 97'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 97'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 97'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 97'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 97'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 97'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 97'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 97'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 97'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 97'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 97'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 97'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 97'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 97'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 97'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 97'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 97'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 97'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 97'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 97'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 97'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 97'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 97'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 97'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 97'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 97'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 97'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_40 = 32'b1000000;
parameter    ap_const_lv32_48 = 32'b1001000;
parameter    ap_const_lv32_49 = 32'b1001001;
parameter    ap_const_lv32_4A = 32'b1001010;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_4D = 32'b1001101;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_51 = 32'b1010001;
parameter    ap_const_lv32_52 = 32'b1010010;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_59 = 32'b1011001;
parameter    ap_const_lv32_5A = 32'b1011010;
parameter    ap_const_lv21_0 = 21'b000000000000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv21_10000 = 21'b10000000000000000;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_5C = 32'b1011100;
parameter    ap_const_lv32_5E = 32'b1011110;
parameter    ap_const_lv32_60 = 32'b1100000;
parameter    ap_const_lv32_5B = 32'b1011011;
parameter    ap_const_lv64_3FB999999999999A = 64'b11111110111001100110011001100110011001100110011001100110011010;
parameter    ap_const_lv32_34 = 32'b110100;
parameter    ap_const_lv32_3E = 32'b111110;
parameter    ap_const_lv11_7F0 = 11'b11111110000;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv52_0 = 52'b0000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv22_3F0000 = 22'b1111110000000000000000;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv20_0 = 20'b00000000000000000000;
parameter    ap_const_lv21_FFFFF = 21'b11111111111111111111;
parameter    ap_const_lv21_100001 = 21'b100000000000000000001;
parameter    ap_const_lv5_11 = 5'b10001;
parameter    ap_const_lv49_1000000000000 = 49'b1000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_26 = 32'b100110;
parameter    ap_const_lv15_0 = 15'b000000000000000;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv5_1F = 5'b11111;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv48_0 = 48'b000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_45 = 32'b1000101;
parameter    ap_const_lv32_30 = 32'b110000;
parameter    ap_const_lv32_44 = 32'b1000100;
parameter    ap_const_lv47_0 = 47'b00000000000000000000000000000000000000000000000;
parameter    ap_const_lv6_23 = 6'b100011;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv32_2B = 32'b101011;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv20_FFFFF = 20'b11111111111111111111;
parameter    ap_const_lv5_4 = 5'b100;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input  [20:0] WBSlave_log_in_V;
output  [20:0] WBSlave_log_out_V;
output   WBSlave_log_out_V_ap_vld;
input  [0:0] WBSlave_log_start_V_i;
output  [0:0] WBSlave_log_start_V_o;
output   WBSlave_log_start_V_o_ap_vld;
output  [0:0] WBSlave_log_done_V;
output   WBSlave_log_done_V_ap_vld;

reg[20:0] WBSlave_log_out_V;
reg WBSlave_log_out_V_ap_vld;
reg[0:0] WBSlave_log_done_V;
reg WBSlave_log_done_V_ap_vld;
reg   [5:0] inputLUT_V_address0;
reg    inputLUT_V_ce0;
wire   [12:0] inputLUT_V_q0;
wire   [5:0] logLUT_V_address0;
reg    logLUT_V_ce0;
wire   [20:0] logLUT_V_q0;
wire   [5:0] gradientLUT_V_address0;
reg    gradientLUT_V_ce0;
wire   [30:0] gradientLUT_V_q0;
wire   [5:0] offsetLUT_V_address0;
reg    offsetLUT_V_ce0;
wire   [20:0] offsetLUT_V_q0;
(* fsm_encoding = "none" *) reg   [96:0] ap_CS_fsm = 97'b10;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_148;
wire   [63:0] grp_fu_411_p1;
reg   [63:0] dp_s_reg_1573;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_158;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_167;
wire   [0:0] tmp_118_fu_467_p2;
reg   [0:0] tmp_118_reg_1583;
wire   [43:0] OP2_V_cast_fu_478_p1;
reg   [43:0] OP2_V_cast_reg_1588;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_178;
wire  signed [41:0] OP2_V_fu_597_p1;
reg  signed [41:0] OP2_V_reg_1593;
wire   [0:0] brmerge_fu_601_p2;
reg   [0:0] brmerge_reg_1598;
wire   [0:0] WBSlave_log_start_V_read_read_fu_272_p2;
reg   [0:0] WBSlave_log_start_V_read_reg_1602;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_191;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_204;
wire   [0:0] exitcond_fu_613_p2;
reg   [0:0] signbit_reg_1620;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_218;
reg   [20:0] p_Val2_14_reg_1626;
reg   [0:0] qbit_5_reg_1631;
wire   [14:0] tmp_179_fu_664_p1;
reg   [14:0] tmp_179_reg_1636;
reg   [0:0] tmp_180_reg_1641;
reg   [0:0] tmp_181_reg_1646;
reg   [0:0] tmp_183_reg_1651;
reg   [3:0] p_Result_s_43_reg_1656;
reg   [4:0] p_Result_1_reg_1661;
wire   [20:0] p_Val2_15_fu_731_p2;
reg   [20:0] p_Val2_15_reg_1667;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_243;
wire   [0:0] newsignbit_11_fu_736_p3;
reg   [0:0] newsignbit_11_reg_1673;
wire   [0:0] deleted_zeros_fu_770_p3;
reg   [0:0] deleted_zeros_reg_1679;
wire   [0:0] deleted_ones_fu_789_p3;
reg   [0:0] deleted_ones_reg_1684;
wire   [0:0] p_38_i2_fu_797_p2;
reg   [0:0] p_38_i2_reg_1689;
wire   [0:0] tmp_134_fu_807_p2;
reg   [0:0] tmp_134_reg_1694;
wire   [20:0] power_V_fu_897_p3;
reg   [20:0] power_V_reg_1699;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_262;
wire   [48:0] grp_fu_632_p2;
reg   [48:0] r_V_reg_1705;
reg    ap_sig_cseq_ST_st64_fsm_63;
reg    ap_sig_bdd_271;
reg    ap_sig_cseq_ST_st65_fsm_64;
reg    ap_sig_bdd_280;
wire  signed [69:0] tmp_174_cast_fu_925_p1;
reg  signed [69:0] tmp_174_cast_reg_1720;
reg    ap_sig_cseq_ST_st73_fsm_72;
reg    ap_sig_bdd_291;
wire  signed [69:0] tmp_175_cast_fu_929_p1;
reg  signed [69:0] tmp_175_cast_reg_1726;
wire   [0:0] tmp_185_fu_933_p1;
reg   [0:0] tmp_185_reg_1732;
reg   [0:0] qbit_7_reg_1736;
wire   [46:0] tmp_188_fu_945_p1;
reg   [46:0] tmp_188_reg_1741;
reg   [0:0] signbit_4_reg_1746;
reg    ap_sig_cseq_ST_st74_fsm_73;
reg    ap_sig_bdd_311;
reg   [20:0] p_Val2_41_reg_1755;
reg   [0:0] tmp_196_reg_1760;
wire   [0:0] qb_assign_2_fu_1011_p2;
reg   [0:0] qb_assign_2_reg_1766;
wire   [20:0] p_Val2_42_fu_1020_p2;
reg   [20:0] p_Val2_42_reg_1771;
reg    ap_sig_cseq_ST_st75_fsm_74;
reg    ap_sig_bdd_326;
wire   [0:0] overflow_11_fu_1088_p2;
reg   [0:0] overflow_11_reg_1777;
wire   [0:0] underflow_8_fu_1127_p2;
reg   [0:0] underflow_8_reg_1783;
wire   [4:0] i_12_fu_1161_p2;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_bdd_339;
reg   [0:0] signbit_5_reg_1798;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_bdd_348;
wire   [20:0] p_Val2_39_fu_1225_p2;
reg   [20:0] p_Val2_39_reg_1807;
wire   [0:0] newsignbit_13_fu_1231_p3;
reg   [0:0] newsignbit_13_reg_1813;
wire   [0:0] carry_6_fu_1245_p2;
reg   [0:0] carry_6_reg_1820;
wire   [0:0] p_Result_55_not_fu_1251_p2;
reg   [0:0] p_Result_55_not_reg_1825;
wire   [19:0] tmp_192_fu_1257_p1;
reg   [19:0] tmp_192_reg_1830;
wire   [20:0] p_Val2_41_mux_fu_1352_p3;
reg    ap_sig_cseq_ST_st78_fsm_77;
reg    ap_sig_bdd_367;
wire   [20:0] p_Val2_8_fu_1359_p3;
wire   [0:0] brmerge9_fu_1346_p2;
wire   [0:0] tmp_126_fu_1366_p2;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_bdd_381;
wire   [5:0] i_11_fu_1372_p2;
reg   [5:0] i_11_reg_1852;
wire   [63:0] tmp_127_fu_1378_p1;
reg   [63:0] tmp_127_reg_1858;
wire   [0:0] tmp_128_fu_1387_p2;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_bdd_399;
wire   [0:0] tmp_137_fu_1392_p2;
reg   [0:0] tmp_137_reg_1874;
reg    ap_sig_cseq_ST_st82_fsm_81;
reg    ap_sig_bdd_422;
wire   [0:0] tmp_145_fu_1405_p2;
reg   [30:0] gradientLUT_V_load_reg_1901;
reg    ap_sig_cseq_ST_st83_fsm_82;
reg    ap_sig_bdd_439;
reg   [20:0] p_Val2_47_reg_1906;
reg    ap_sig_cseq_ST_st84_fsm_83;
reg    ap_sig_bdd_449;
reg   [20:0] p_Val2_44_reg_1916;
reg    ap_sig_cseq_ST_st90_fsm_89;
reg    ap_sig_bdd_458;
reg   [0:0] qbit_reg_1921;
reg   [0:0] tmp_201_reg_1926;
reg   [6:0] tmp_154_reg_1931;
wire   [19:0] p_Val2_46_fu_1502_p3;
reg   [19:0] p_Val2_46_reg_1936;
reg    ap_sig_cseq_ST_st91_fsm_90;
reg    ap_sig_bdd_473;
reg   [20:0] sum_V_phi_fu_383_p8;
reg   [20:0] p_Val2_36_reg_343;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_484;
reg   [20:0] power_reg_356;
reg   [4:0] i_op_assign_reg_367;
wire   [20:0] p_Val2_7_fu_1154_p3;
reg   [20:0] sum_V_reg_379;
wire   [0:0] brmerge8_fu_1141_p2;
wire   [20:0] p_Val2_59_mux_fu_1146_p3;
reg   [5:0] i_reg_394;
wire   [63:0] tmp_144_fu_1397_p1;
reg    ap_sig_cseq_ST_st93_fsm_92;
reg    ap_sig_bdd_522;
reg    ap_sig_cseq_ST_st95_fsm_94;
reg    ap_sig_bdd_530;
reg    ap_sig_cseq_ST_st97_fsm_96;
reg    ap_sig_bdd_538;
wire   [0:0] tmp_156_fu_1551_p2;
wire   [20:0] this_assign_1_fu_1542_p3;
reg    ap_sig_cseq_ST_st92_fsm_91;
reg    ap_sig_bdd_551;
wire   [63:0] grp_fu_406_p0;
wire   [63:0] grp_fu_406_p1;
wire   [20:0] grp_fu_411_p0;
wire   [63:0] res_V_fu_415_p1;
wire   [10:0] exp_V_fu_418_p4;
wire   [10:0] exp_V_s_fu_428_p2;
wire   [63:0] p_Result_s_fu_434_p5;
wire   [51:0] tmp_172_fu_451_p1;
wire   [0:0] notrhs_fu_461_p2;
wire   [0:0] notlhs_fu_455_p2;
wire   [0:0] grp_fu_406_p2;
wire  signed [21:0] tmp_121_fu_486_p1;
wire  signed [21:0] p_Val2_34_fu_489_p2;
wire   [0:0] isneg_fu_495_p3;
wire   [0:0] neg_trg_10_fu_507_p3;
wire   [0:0] tmp_122_fu_515_p2;
wire   [19:0] tmp_176_fu_533_p1;
wire   [0:0] tmp_124_fu_537_p2;
wire   [0:0] tmp_123_fu_527_p2;
wire   [0:0] tmp_125_fu_543_p2;
wire   [0:0] underflow_6_fu_549_p2;
wire   [0:0] overflow_8_fu_521_p2;
wire   [0:0] underflow_31_not_fu_561_p2;
wire   [0:0] brmerge_i_i_fu_555_p2;
wire   [20:0] p_Val2_35_fu_503_p1;
wire   [0:0] brmerge6_fu_567_p2;
wire   [20:0] p_Val2_44_mux_fu_573_p3;
wire   [20:0] p_Val2_s_41_fu_581_p3;
wire   [20:0] x_V_fu_589_p3;
wire   [0:0] tmp_s_fu_473_p2;
wire   [0:0] tmp_120_fu_481_p2;
wire  signed [20:0] grp_fu_623_p0;
wire  signed [20:0] grp_fu_623_p1;
wire  signed [48:0] grp_fu_632_p0;
wire   [4:0] grp_fu_632_p1;
wire  signed [41:0] grp_fu_623_p2;
wire   [0:0] r_fu_712_p2;
wire   [0:0] r_i_i3_fu_717_p2;
wire   [0:0] qb_assign_s_fu_722_p2;
wire   [20:0] tmp_129_fu_727_p1;
wire   [0:0] tmp_130_fu_744_p2;
wire   [0:0] carry_4_fu_750_p2;
wire   [0:0] Range1_all_ones_fu_760_p2;
wire   [0:0] Range1_all_zeros_fu_765_p2;
wire   [0:0] Range2_all_ones_fu_755_p2;
wire   [0:0] tmp_131_fu_778_p2;
wire   [0:0] p_41_i2_fu_783_p2;
wire   [19:0] tmp_184_fu_803_p1;
wire   [0:0] p_not_i3_fu_818_p2;
wire   [0:0] brmerge_i4_fu_823_p2;
wire   [0:0] tmp_133_fu_828_p2;
wire   [0:0] brmerge40_demorgan_i2_fu_839_p2;
wire   [0:0] brmerge40_i2_fu_843_p2;
wire   [0:0] tmp_135_fu_849_p2;
wire   [0:0] tmp_132_fu_813_p2;
wire   [0:0] tmp9_fu_854_p2;
wire   [0:0] underflow_7_fu_860_p2;
wire   [0:0] overflow_9_fu_833_p2;
wire   [0:0] underflow_32_not_fu_871_p2;
wire   [0:0] brmerge_i_i8_fu_865_p2;
wire   [0:0] brmerge7_fu_877_p2;
wire   [20:0] p_Val2_50_mux_fu_883_p3;
wire   [20:0] p_Val2_6_fu_890_p3;
wire   [48:0] grp_fu_911_p0;
wire  signed [20:0] grp_fu_911_p1;
wire   [68:0] tmp_136_fu_917_p3;
wire  signed [68:0] grp_fu_911_p2;
wire  signed [69:0] p_Val2_40_fu_949_p2;
wire   [46:0] tmp_195_fu_979_p1;
wire   [0:0] tmp_197_fu_997_p3;
wire   [0:0] r_5_fu_983_p2;
wire   [0:0] r_i_i_i_fu_1005_p2;
wire   [0:0] qbit_6_fu_971_p3;
wire   [20:0] tmp_146_fu_1017_p1;
wire   [0:0] newsignbit_12_fu_1025_p3;
wire   [0:0] tmp_149_fu_1033_p2;
wire   [0:0] p_Result_52_not_fu_1044_p2;
wire   [0:0] not_carry_5_fu_1049_p2;
wire   [0:0] carry_5_fu_1039_p2;
wire   [0:0] p_38_i_i_fu_1065_p2;
wire   [0:0] deleted_zeros_4_fu_1055_p2;
wire   [0:0] p_not_i_i_fu_1076_p2;
wire   [0:0] brmerge_i_i9_fu_1082_p2;
wire   [0:0] tmp_150_fu_1060_p2;
wire   [0:0] brmerge40_demorgan_i_i_fu_1094_p2;
wire   [19:0] tmp_199_fu_1105_p1;
wire   [0:0] tmp_152_fu_1109_p2;
wire   [0:0] brmerge40_i_i_fu_1099_p2;
wire   [0:0] tmp_153_fu_1115_p2;
wire   [0:0] tmp_151_fu_1070_p2;
wire   [0:0] tmp10_fu_1121_p2;
wire   [0:0] underflow_33_not_fu_1136_p2;
wire   [0:0] brmerge_i_i_i3_fu_1132_p2;
wire  signed [69:0] p_Val2_37_fu_1167_p2;
wire   [0:0] tmp_190_fu_1202_p3;
wire   [0:0] r_6_fu_1189_p2;
wire   [0:0] r_i_i_i2_fu_1210_p2;
wire   [0:0] qb_assign_1_fu_1216_p2;
wire   [20:0] p_Val2_38_fu_1179_p4;
wire   [20:0] tmp_138_fu_1221_p1;
wire   [0:0] tmp_189_fu_1194_p3;
wire   [0:0] tmp_139_fu_1239_p2;
wire   [0:0] not_carry_6_fu_1261_p2;
wire   [0:0] p_38_i_i2_fu_1275_p2;
wire   [0:0] deleted_zeros_5_fu_1265_p2;
wire   [0:0] p_not_i_i2_fu_1285_p2;
wire   [0:0] brmerge_i_i1_fu_1291_p2;
wire   [0:0] tmp_140_fu_1270_p2;
wire   [0:0] brmerge40_demorgan_i_i2_fu_1302_p2;
wire   [0:0] tmp_142_fu_1312_p2;
wire   [0:0] brmerge40_i_i2_fu_1306_p2;
wire   [0:0] tmp_143_fu_1317_p2;
wire   [0:0] tmp_141_fu_1279_p2;
wire   [0:0] tmp11_fu_1323_p2;
wire   [0:0] underflow_9_fu_1329_p2;
wire   [0:0] overflow_10_fu_1296_p2;
wire   [0:0] underflow_34_not_fu_1340_p2;
wire   [0:0] brmerge_i_i_i4_fu_1334_p2;
wire   [20:0] inputLUT_V_load_cast_fu_1383_p1;
wire   [20:0] inputLUT_V_load_1_cast_fu_1401_p1;
wire   [30:0] grp_fu_1413_p0;
wire   [20:0] grp_fu_1413_p1;
wire   [43:0] grp_fu_1413_p2;
wire   [20:0] tmp_147_fu_1454_p1;
wire   [20:0] p_Val2_45_fu_1457_p2;
wire   [0:0] newsignbit_fu_1466_p3;
wire   [0:0] tmp_148_fu_1474_p2;
wire   [0:0] Range1_all_zeros_not_fu_1485_p2;
wire   [0:0] tmp8_fu_1490_p2;
wire   [0:0] carry_fu_1480_p2;
wire   [0:0] overflow_fu_1496_p2;
wire   [19:0] tmp_202_fu_1462_p1;
wire   [20:0] p_Val2_68_cast_fu_1510_p1;
wire   [20:0] p_Val2_48_fu_1513_p2;
wire   [19:0] tmp_205_fu_1526_p1;
wire   [0:0] isneg_6_fu_1518_p3;
wire   [0:0] tmp_155_fu_1530_p2;
wire   [0:0] underflow_fu_1536_p2;
wire    grp_fu_406_ce;
wire   [4:0] grp_fu_406_opcode;
wire    grp_fu_411_ce;
wire    grp_fu_623_ce;
reg    WBSlave_udiv_49s_5ns_49_53_seq_U4_ap_start;
wire    grp_fu_632_ce;
wire    grp_fu_911_ce;
wire    grp_fu_1413_ce;
reg   [96:0] ap_NS_fsm;
wire   [43:0] grp_fu_1413_p00;
wire   [48:0] grp_fu_632_p10;
wire   [68:0] grp_fu_911_p00;
reg    ap_sig_bdd_1503;


WBSlave_getLog_inputLUT_V #(
    .DataWidth( 13 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
inputLUT_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( inputLUT_V_address0 ),
    .ce0( inputLUT_V_ce0 ),
    .q0( inputLUT_V_q0 )
);

WBSlave_getLog_logLUT_V #(
    .DataWidth( 21 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
logLUT_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( logLUT_V_address0 ),
    .ce0( logLUT_V_ce0 ),
    .q0( logLUT_V_q0 )
);

WBSlave_getLog_gradientLUT_V #(
    .DataWidth( 31 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
gradientLUT_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( gradientLUT_V_address0 ),
    .ce0( gradientLUT_V_ce0 ),
    .q0( gradientLUT_V_q0 )
);

WBSlave_getLog_offsetLUT_V #(
    .DataWidth( 21 ),
    .AddressRange( 36 ),
    .AddressWidth( 6 ))
offsetLUT_V_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( offsetLUT_V_address0 ),
    .ce0( offsetLUT_V_ce0 ),
    .q0( offsetLUT_V_q0 )
);

WBSlave_dcmp_64ns_64ns_1_3 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
WBSlave_dcmp_64ns_64ns_1_3_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_406_p0 ),
    .din1( grp_fu_406_p1 ),
    .ce( grp_fu_406_ce ),
    .opcode( grp_fu_406_opcode ),
    .dout( grp_fu_406_p2 )
);

WBSlave_sitodp_21ns_64_5 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 21 ),
    .dout_WIDTH( 64 ))
WBSlave_sitodp_21ns_64_5_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_411_p0 ),
    .ce( grp_fu_411_ce ),
    .dout( grp_fu_411_p1 )
);

WBSlave_mul_21s_21s_42_7 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 42 ))
WBSlave_mul_21s_21s_42_7_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_623_p0 ),
    .din1( grp_fu_623_p1 ),
    .ce( grp_fu_623_ce ),
    .dout( grp_fu_623_p2 )
);

WBSlave_udiv_49s_5ns_49_53_seq #(
    .ID( 1 ),
    .NUM_STAGE( 53 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 49 ))
WBSlave_udiv_49s_5ns_49_53_seq_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .start( WBSlave_udiv_49s_5ns_49_53_seq_U4_ap_start ),
    .din0( grp_fu_632_p0 ),
    .din1( grp_fu_632_p1 ),
    .ce( grp_fu_632_ce ),
    .dout( grp_fu_632_p2 )
);

WBSlave_mul_49ns_21s_69_9 #(
    .ID( 1 ),
    .NUM_STAGE( 9 ),
    .din0_WIDTH( 49 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 69 ))
WBSlave_mul_49ns_21s_69_9_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_911_p0 ),
    .din1( grp_fu_911_p1 ),
    .ce( grp_fu_911_ce ),
    .dout( grp_fu_911_p2 )
);

WBSlave_mul_31ns_21ns_44_7 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 31 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 44 ))
WBSlave_mul_31ns_21ns_44_7_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_1413_p0 ),
    .din1( grp_fu_1413_p1 ),
    .ce( grp_fu_1413_ce ),
    .dout( grp_fu_1413_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st2_fsm_1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & (brmerge_reg_1598 == ap_const_lv1_0))) begin
        i_op_assign_reg_367 <= ap_const_lv5_1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75)) begin
        i_op_assign_reg_367 <= i_12_fu_1161_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & ~(brmerge_reg_1598 == ap_const_lv1_0))) begin
        i_reg_394 <= ap_const_lv6_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81) & ((ap_const_lv1_0 == tmp_137_reg_1874) | (ap_const_lv1_0 == tmp_145_fu_1405_p2)))) begin
        i_reg_394 <= i_11_reg_1852;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & (brmerge_reg_1598 == ap_const_lv1_0))) begin
        p_Val2_36_reg_343 <= ap_const_lv21_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75)) begin
        p_Val2_36_reg_343 <= sum_V_phi_fu_383_p8;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) & (brmerge_reg_1598 == ap_const_lv1_0))) begin
        power_reg_356 <= ap_const_lv21_10000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75)) begin
        power_reg_356 <= power_V_reg_1699;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) & ~(ap_const_lv1_0 == brmerge9_fu_1346_p2))) begin
        sum_V_reg_379 <= p_Val2_41_mux_fu_1352_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st78_fsm_77) & (ap_const_lv1_0 == brmerge9_fu_1346_p2))) begin
        sum_V_reg_379 <= p_Val2_8_fu_1359_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) & (ap_const_lv1_0 == tmp_185_reg_1732) & ~(ap_const_lv1_0 == brmerge8_fu_1141_p2))) begin
        sum_V_reg_379 <= p_Val2_59_mux_fu_1146_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) & (ap_const_lv1_0 == tmp_185_reg_1732) & (ap_const_lv1_0 == brmerge8_fu_1141_p2))) begin
        sum_V_reg_379 <= p_Val2_7_fu_1154_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        OP2_V_cast_reg_1588[0] <= OP2_V_cast_fu_478_p1[0];
OP2_V_cast_reg_1588[1] <= OP2_V_cast_fu_478_p1[1];
OP2_V_cast_reg_1588[2] <= OP2_V_cast_fu_478_p1[2];
OP2_V_cast_reg_1588[3] <= OP2_V_cast_fu_478_p1[3];
OP2_V_cast_reg_1588[4] <= OP2_V_cast_fu_478_p1[4];
OP2_V_cast_reg_1588[5] <= OP2_V_cast_fu_478_p1[5];
OP2_V_cast_reg_1588[6] <= OP2_V_cast_fu_478_p1[6];
OP2_V_cast_reg_1588[7] <= OP2_V_cast_fu_478_p1[7];
OP2_V_cast_reg_1588[8] <= OP2_V_cast_fu_478_p1[8];
OP2_V_cast_reg_1588[9] <= OP2_V_cast_fu_478_p1[9];
OP2_V_cast_reg_1588[10] <= OP2_V_cast_fu_478_p1[10];
OP2_V_cast_reg_1588[11] <= OP2_V_cast_fu_478_p1[11];
OP2_V_cast_reg_1588[12] <= OP2_V_cast_fu_478_p1[12];
OP2_V_cast_reg_1588[13] <= OP2_V_cast_fu_478_p1[13];
OP2_V_cast_reg_1588[14] <= OP2_V_cast_fu_478_p1[14];
OP2_V_cast_reg_1588[15] <= OP2_V_cast_fu_478_p1[15];
OP2_V_cast_reg_1588[16] <= OP2_V_cast_fu_478_p1[16];
OP2_V_cast_reg_1588[17] <= OP2_V_cast_fu_478_p1[17];
OP2_V_cast_reg_1588[18] <= OP2_V_cast_fu_478_p1[18];
OP2_V_cast_reg_1588[19] <= OP2_V_cast_fu_478_p1[19];
OP2_V_cast_reg_1588[20] <= OP2_V_cast_fu_478_p1[20];
        OP2_V_reg_1593 <= OP2_V_fu_597_p1;
        brmerge_reg_1598 <= brmerge_fu_601_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(WBSlave_log_start_V_read_read_fu_272_p2 == ap_const_lv1_0))) begin
        WBSlave_log_start_V_read_reg_1602 <= WBSlave_log_start_V_i;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st77_fsm_76)) begin
        carry_6_reg_1820 <= carry_6_fu_1245_p2;
        newsignbit_13_reg_1813 <= p_Val2_39_fu_1225_p2[ap_const_lv32_14];
        p_Result_55_not_reg_1825 <= p_Result_55_not_fu_1251_p2;
        p_Val2_39_reg_1807 <= p_Val2_39_fu_1225_p2;
        signbit_5_reg_1798 <= p_Val2_37_fu_1167_p2[ap_const_lv32_45];
        tmp_192_reg_1830 <= tmp_192_fu_1257_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        deleted_ones_reg_1684 <= deleted_ones_fu_789_p3;
        deleted_zeros_reg_1679 <= deleted_zeros_fu_770_p3;
        newsignbit_11_reg_1673 <= p_Val2_15_fu_731_p2[ap_const_lv32_14];
        p_38_i2_reg_1689 <= p_38_i2_fu_797_p2;
        p_Val2_15_reg_1667 <= p_Val2_15_fu_731_p2;
        tmp_134_reg_1694 <= tmp_134_fu_807_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        dp_s_reg_1573 <= grp_fu_411_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st83_fsm_82)) begin
        gradientLUT_V_load_reg_1901 <= gradientLUT_V_q0;
        p_Val2_47_reg_1906 <= offsetLUT_V_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79)) begin
        i_11_reg_1852 <= i_11_fu_1372_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st75_fsm_74)) begin
        overflow_11_reg_1777 <= overflow_11_fu_1088_p2;
        p_Val2_42_reg_1771 <= p_Val2_42_fu_1020_p2;
        underflow_8_reg_1783 <= underflow_8_fu_1127_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        p_Result_1_reg_1661 <= {{grp_fu_623_p2[ap_const_lv32_29 : ap_const_lv32_25]}};
        p_Result_s_43_reg_1656 <= {{grp_fu_623_p2[ap_const_lv32_29 : ap_const_lv32_26]}};
        p_Val2_14_reg_1626 <= {{grp_fu_623_p2[ap_const_lv32_24 : ap_const_lv32_10]}};
        qbit_5_reg_1631 <= grp_fu_623_p2[ap_const_lv32_F];
        signbit_reg_1620 <= grp_fu_623_p2[ap_const_lv32_29];
        tmp_179_reg_1636 <= tmp_179_fu_664_p1;
        tmp_180_reg_1641 <= grp_fu_623_p2[ap_const_lv32_24];
        tmp_181_reg_1646 <= grp_fu_623_p2[ap_const_lv32_10];
        tmp_183_reg_1651 <= grp_fu_623_p2[ap_const_lv32_25];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st74_fsm_73)) begin
        p_Val2_41_reg_1755 <= {{p_Val2_40_fu_949_p2[ap_const_lv32_44 : ap_const_lv32_30]}};
        qb_assign_2_reg_1766 <= qb_assign_2_fu_1011_p2;
        signbit_4_reg_1746 <= p_Val2_40_fu_949_p2[ap_const_lv32_45];
        tmp_196_reg_1760 <= p_Val2_40_fu_949_p2[ap_const_lv32_44];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st90_fsm_89)) begin
        p_Val2_44_reg_1916 <= {{grp_fu_1413_p2[ap_const_lv32_24 : ap_const_lv32_10]}};
        qbit_reg_1921 <= grp_fu_1413_p2[ap_const_lv32_F];
        tmp_154_reg_1931 <= {{grp_fu_1413_p2[ap_const_lv32_2B : ap_const_lv32_25]}};
        tmp_201_reg_1926 <= grp_fu_1413_p2[ap_const_lv32_24];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st91_fsm_90)) begin
        p_Val2_46_reg_1936 <= p_Val2_46_fu_1502_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        power_V_reg_1699 <= power_V_fu_897_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72) & ~(ap_const_lv1_0 == tmp_185_fu_933_p1))) begin
        qbit_7_reg_1736 <= grp_fu_911_p2[ap_const_lv32_2F];
        tmp_188_reg_1741 <= tmp_188_fu_945_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st64_fsm_63)) begin
        r_V_reg_1705 <= grp_fu_632_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_118_reg_1583 <= tmp_118_fu_467_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) & ~(ap_const_lv1_0 == tmp_126_fu_1366_p2))) begin
        tmp_127_reg_1858[0] <= tmp_127_fu_1378_p1[0];
tmp_127_reg_1858[1] <= tmp_127_fu_1378_p1[1];
tmp_127_reg_1858[2] <= tmp_127_fu_1378_p1[2];
tmp_127_reg_1858[3] <= tmp_127_fu_1378_p1[3];
tmp_127_reg_1858[4] <= tmp_127_fu_1378_p1[4];
tmp_127_reg_1858[5] <= tmp_127_fu_1378_p1[5];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80) & (ap_const_lv1_0 == tmp_128_fu_1387_p2))) begin
        tmp_137_reg_1874 <= tmp_137_fu_1392_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st73_fsm_72)) begin
        tmp_174_cast_reg_1720[48] <= tmp_174_cast_fu_925_p1[48];
tmp_174_cast_reg_1720[49] <= tmp_174_cast_fu_925_p1[49];
tmp_174_cast_reg_1720[50] <= tmp_174_cast_fu_925_p1[50];
tmp_174_cast_reg_1720[51] <= tmp_174_cast_fu_925_p1[51];
tmp_174_cast_reg_1720[52] <= tmp_174_cast_fu_925_p1[52];
tmp_174_cast_reg_1720[53] <= tmp_174_cast_fu_925_p1[53];
tmp_174_cast_reg_1720[54] <= tmp_174_cast_fu_925_p1[54];
tmp_174_cast_reg_1720[55] <= tmp_174_cast_fu_925_p1[55];
tmp_174_cast_reg_1720[56] <= tmp_174_cast_fu_925_p1[56];
tmp_174_cast_reg_1720[57] <= tmp_174_cast_fu_925_p1[57];
tmp_174_cast_reg_1720[58] <= tmp_174_cast_fu_925_p1[58];
tmp_174_cast_reg_1720[59] <= tmp_174_cast_fu_925_p1[59];
tmp_174_cast_reg_1720[60] <= tmp_174_cast_fu_925_p1[60];
tmp_174_cast_reg_1720[61] <= tmp_174_cast_fu_925_p1[61];
tmp_174_cast_reg_1720[62] <= tmp_174_cast_fu_925_p1[62];
tmp_174_cast_reg_1720[63] <= tmp_174_cast_fu_925_p1[63];
tmp_174_cast_reg_1720[64] <= tmp_174_cast_fu_925_p1[64];
tmp_174_cast_reg_1720[65] <= tmp_174_cast_fu_925_p1[65];
tmp_174_cast_reg_1720[66] <= tmp_174_cast_fu_925_p1[66];
tmp_174_cast_reg_1720[67] <= tmp_174_cast_fu_925_p1[67];
tmp_174_cast_reg_1720[68] <= tmp_174_cast_fu_925_p1[68];
tmp_174_cast_reg_1720[69] <= tmp_174_cast_fu_925_p1[69];
        tmp_175_cast_reg_1726 <= tmp_175_cast_fu_929_p1;
        tmp_185_reg_1732 <= tmp_185_fu_933_p1;
    end
end

/// WBSlave_log_done_V assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11 or exitcond_fu_613_p2 or ap_sig_cseq_ST_st93_fsm_92 or ap_sig_cseq_ST_st95_fsm_94 or ap_sig_cseq_ST_st97_fsm_96 or tmp_156_fu_1551_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_96) & ~(tmp_156_fu_1551_p2 == ap_const_lv1_0))) begin
        WBSlave_log_done_V = ap_const_lv1_0;
    end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == exitcond_fu_613_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) | (ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94))) begin
        WBSlave_log_done_V = ap_const_lv1_1;
    end else begin
        WBSlave_log_done_V = 'bx;
    end
end

/// WBSlave_log_done_V_ap_vld assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11 or exitcond_fu_613_p2 or ap_sig_cseq_ST_st93_fsm_92 or ap_sig_cseq_ST_st95_fsm_94 or ap_sig_cseq_ST_st97_fsm_96 or tmp_156_fu_1551_p2)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == exitcond_fu_613_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st93_fsm_92) | (ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94) | ((ap_const_logic_1 == ap_sig_cseq_ST_st97_fsm_96) & ~(tmp_156_fu_1551_p2 == ap_const_lv1_0)))) begin
        WBSlave_log_done_V_ap_vld = ap_const_logic_1;
    end else begin
        WBSlave_log_done_V_ap_vld = ap_const_logic_0;
    end
end

/// WBSlave_log_out_V assign process. ///
always @ (logLUT_V_q0 or ap_sig_cseq_ST_st12_fsm_11 or exitcond_fu_613_p2 or p_Val2_36_reg_343 or ap_sig_cseq_ST_st95_fsm_94 or this_assign_1_fu_1542_p3 or ap_sig_cseq_ST_st92_fsm_91)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94)) begin
        WBSlave_log_out_V = logLUT_V_q0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st92_fsm_91)) begin
        WBSlave_log_out_V = this_assign_1_fu_1542_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == exitcond_fu_613_p2))) begin
        WBSlave_log_out_V = p_Val2_36_reg_343;
    end else begin
        WBSlave_log_out_V = 'bx;
    end
end

/// WBSlave_log_out_V_ap_vld assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11 or exitcond_fu_613_p2 or ap_sig_cseq_ST_st95_fsm_94 or ap_sig_cseq_ST_st92_fsm_91)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & ~(ap_const_lv1_0 == exitcond_fu_613_p2)) | (ap_const_logic_1 == ap_sig_cseq_ST_st95_fsm_94) | (ap_const_logic_1 == ap_sig_cseq_ST_st92_fsm_91))) begin
        WBSlave_log_out_V_ap_vld = ap_const_logic_1;
    end else begin
        WBSlave_log_out_V_ap_vld = ap_const_logic_0;
    end
end

/// WBSlave_udiv_49s_5ns_49_53_seq_U4_ap_start assign process. ///
always @ (ap_sig_cseq_ST_st12_fsm_11 or exitcond_fu_613_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) & (ap_const_lv1_0 == exitcond_fu_613_p2))) begin
        WBSlave_udiv_49s_5ns_49_53_seq_U4_ap_start = ap_const_logic_1;
    end else begin
        WBSlave_udiv_49s_5ns_49_53_seq_U4_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_191)
begin
    if (ap_sig_bdd_191) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_484)
begin
    if (ap_sig_bdd_484) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_204)
begin
    if (ap_sig_bdd_204) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st18_fsm_17 assign process. ///
always @ (ap_sig_bdd_218)
begin
    if (ap_sig_bdd_218) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_243)
begin
    if (ap_sig_bdd_243) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_262)
begin
    if (ap_sig_bdd_262) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_148)
begin
    if (ap_sig_bdd_148) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st64_fsm_63 assign process. ///
always @ (ap_sig_bdd_271)
begin
    if (ap_sig_bdd_271) begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st64_fsm_63 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st65_fsm_64 assign process. ///
always @ (ap_sig_bdd_280)
begin
    if (ap_sig_bdd_280) begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st65_fsm_64 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_158)
begin
    if (ap_sig_bdd_158) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st73_fsm_72 assign process. ///
always @ (ap_sig_bdd_291)
begin
    if (ap_sig_bdd_291) begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st73_fsm_72 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st74_fsm_73 assign process. ///
always @ (ap_sig_bdd_311)
begin
    if (ap_sig_bdd_311) begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st74_fsm_73 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st75_fsm_74 assign process. ///
always @ (ap_sig_bdd_326)
begin
    if (ap_sig_bdd_326) begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st75_fsm_74 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st76_fsm_75 assign process. ///
always @ (ap_sig_bdd_339)
begin
    if (ap_sig_bdd_339) begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st77_fsm_76 assign process. ///
always @ (ap_sig_bdd_348)
begin
    if (ap_sig_bdd_348) begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st78_fsm_77 assign process. ///
always @ (ap_sig_bdd_367)
begin
    if (ap_sig_bdd_367) begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st78_fsm_77 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_167)
begin
    if (ap_sig_bdd_167) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st80_fsm_79 assign process. ///
always @ (ap_sig_bdd_381)
begin
    if (ap_sig_bdd_381) begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st81_fsm_80 assign process. ///
always @ (ap_sig_bdd_399)
begin
    if (ap_sig_bdd_399) begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st82_fsm_81 assign process. ///
always @ (ap_sig_bdd_422)
begin
    if (ap_sig_bdd_422) begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st82_fsm_81 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st83_fsm_82 assign process. ///
always @ (ap_sig_bdd_439)
begin
    if (ap_sig_bdd_439) begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st83_fsm_82 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st84_fsm_83 assign process. ///
always @ (ap_sig_bdd_449)
begin
    if (ap_sig_bdd_449) begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_83 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st90_fsm_89 assign process. ///
always @ (ap_sig_bdd_458)
begin
    if (ap_sig_bdd_458) begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st90_fsm_89 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st91_fsm_90 assign process. ///
always @ (ap_sig_bdd_473)
begin
    if (ap_sig_bdd_473) begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st91_fsm_90 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st92_fsm_91 assign process. ///
always @ (ap_sig_bdd_551)
begin
    if (ap_sig_bdd_551) begin
        ap_sig_cseq_ST_st92_fsm_91 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st92_fsm_91 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st93_fsm_92 assign process. ///
always @ (ap_sig_bdd_522)
begin
    if (ap_sig_bdd_522) begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st93_fsm_92 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st95_fsm_94 assign process. ///
always @ (ap_sig_bdd_530)
begin
    if (ap_sig_bdd_530) begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st95_fsm_94 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st97_fsm_96 assign process. ///
always @ (ap_sig_bdd_538)
begin
    if (ap_sig_bdd_538) begin
        ap_sig_cseq_ST_st97_fsm_96 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st97_fsm_96 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st9_fsm_8 assign process. ///
always @ (ap_sig_bdd_178)
begin
    if (ap_sig_bdd_178) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

/// gradientLUT_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st82_fsm_81)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        gradientLUT_V_ce0 = ap_const_logic_1;
    end else begin
        gradientLUT_V_ce0 = ap_const_logic_0;
    end
end

/// inputLUT_V_address0 assign process. ///
always @ (ap_sig_cseq_ST_st80_fsm_79 or tmp_127_fu_1378_p1 or ap_sig_cseq_ST_st81_fsm_80 or tmp_144_fu_1397_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        inputLUT_V_address0 = tmp_144_fu_1397_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79)) begin
        inputLUT_V_address0 = tmp_127_fu_1378_p1;
    end else begin
        inputLUT_V_address0 = 'bx;
    end
end

/// inputLUT_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st80_fsm_79 or ap_sig_cseq_ST_st81_fsm_80)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st80_fsm_79) | (ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80))) begin
        inputLUT_V_ce0 = ap_const_logic_1;
    end else begin
        inputLUT_V_ce0 = ap_const_logic_0;
    end
end

/// logLUT_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st81_fsm_80)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        logLUT_V_ce0 = ap_const_logic_1;
    end else begin
        logLUT_V_ce0 = ap_const_logic_0;
    end
end

/// offsetLUT_V_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st82_fsm_81)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st82_fsm_81)) begin
        offsetLUT_V_ce0 = ap_const_logic_1;
    end else begin
        offsetLUT_V_ce0 = ap_const_logic_0;
    end
end

/// sum_V_phi_fu_383_p8 assign process. ///
always @ (p_Val2_7_fu_1154_p3 or sum_V_reg_379 or brmerge8_fu_1141_p2 or p_Val2_59_mux_fu_1146_p3 or ap_sig_bdd_1503)
begin
    if (ap_sig_bdd_1503) begin
        if (~(ap_const_lv1_0 == brmerge8_fu_1141_p2)) begin
            sum_V_phi_fu_383_p8 = p_Val2_59_mux_fu_1146_p3;
        end else if ((ap_const_lv1_0 == brmerge8_fu_1141_p2)) begin
            sum_V_phi_fu_383_p8 = p_Val2_7_fu_1154_p3;
        end else begin
            sum_V_phi_fu_383_p8 = sum_V_reg_379;
        end
    end else begin
        sum_V_phi_fu_383_p8 = sum_V_reg_379;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or brmerge_reg_1598 or WBSlave_log_start_V_read_read_fu_272_p2 or exitcond_fu_613_p2 or tmp_185_fu_933_p1 or tmp_126_fu_1366_p2 or tmp_128_fu_1387_p2 or tmp_137_reg_1874 or tmp_145_fu_1405_p2 or tmp_156_fu_1551_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            if (~(WBSlave_log_start_V_read_read_fu_272_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end
        end
        ap_ST_st11_fsm_10 : 
        begin
            if (~(brmerge_reg_1598 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st80_fsm_79;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st12_fsm_11 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_613_p2)) begin
                ap_NS_fsm = ap_ST_st79_fsm_78;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            ap_NS_fsm = ap_ST_st43_fsm_42;
        end
        ap_ST_st43_fsm_42 : 
        begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : 
        begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : 
        begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : 
        begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : 
        begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : 
        begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : 
        begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : 
        begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : 
        begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : 
        begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : 
        begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : 
        begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : 
        begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st56_fsm_55 : 
        begin
            ap_NS_fsm = ap_ST_st57_fsm_56;
        end
        ap_ST_st57_fsm_56 : 
        begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : 
        begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : 
        begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : 
        begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : 
        begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : 
        begin
            ap_NS_fsm = ap_ST_st63_fsm_62;
        end
        ap_ST_st63_fsm_62 : 
        begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : 
        begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : 
        begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : 
        begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : 
        begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : 
        begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : 
        begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : 
        begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : 
        begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : 
        begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : 
        begin
            if (~(ap_const_lv1_0 == tmp_185_fu_933_p1)) begin
                ap_NS_fsm = ap_ST_st77_fsm_76;
            end else begin
                ap_NS_fsm = ap_ST_st74_fsm_73;
            end
        end
        ap_ST_st74_fsm_73 : 
        begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st77_fsm_76 : 
        begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : 
        begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st79_fsm_78 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st80_fsm_79 : 
        begin
            if ((ap_const_lv1_0 == tmp_126_fu_1366_p2)) begin
                ap_NS_fsm = ap_ST_st94_fsm_93;
            end else begin
                ap_NS_fsm = ap_ST_st81_fsm_80;
            end
        end
        ap_ST_st81_fsm_80 : 
        begin
            if ((ap_const_lv1_0 == tmp_128_fu_1387_p2)) begin
                ap_NS_fsm = ap_ST_st82_fsm_81;
            end else begin
                ap_NS_fsm = ap_ST_st95_fsm_94;
            end
        end
        ap_ST_st82_fsm_81 : 
        begin
            if (((ap_const_lv1_0 == tmp_137_reg_1874) | (ap_const_lv1_0 == tmp_145_fu_1405_p2))) begin
                ap_NS_fsm = ap_ST_st80_fsm_79;
            end else begin
                ap_NS_fsm = ap_ST_st83_fsm_82;
            end
        end
        ap_ST_st83_fsm_82 : 
        begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : 
        begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : 
        begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : 
        begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : 
        begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : 
        begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : 
        begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : 
        begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : 
        begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : 
        begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : 
        begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st95_fsm_94 : 
        begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : 
        begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st97_fsm_96 : 
        begin
            if (~(tmp_156_fu_1551_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st97_fsm_96;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP2_V_cast_fu_478_p1 = WBSlave_log_in_V;
assign OP2_V_fu_597_p1 = $signed(x_V_fu_589_p3);
assign Range1_all_ones_fu_760_p2 = (p_Result_1_reg_1661 == ap_const_lv5_1F? 1'b1: 1'b0);
assign Range1_all_zeros_fu_765_p2 = (p_Result_1_reg_1661 == ap_const_lv5_0? 1'b1: 1'b0);
assign Range1_all_zeros_not_fu_1485_p2 = (tmp_154_reg_1931 != ap_const_lv7_0? 1'b1: 1'b0);
assign Range2_all_ones_fu_755_p2 = (p_Result_s_43_reg_1656 == ap_const_lv4_F? 1'b1: 1'b0);
assign WBSlave_log_start_V_o = ap_const_lv1_0;
assign WBSlave_log_start_V_o_ap_vld = ap_const_logic_0;
assign WBSlave_log_start_V_read_read_fu_272_p2 = WBSlave_log_start_V_i;

/// ap_sig_bdd_148 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_148 = (ap_CS_fsm[ap_const_lv32_1] == ap_const_lv1_1);
end

/// ap_sig_bdd_1503 assign process. ///
always @ (tmp_185_reg_1732 or ap_sig_cseq_ST_st76_fsm_75)
begin
    ap_sig_bdd_1503 = ((ap_const_logic_1 == ap_sig_cseq_ST_st76_fsm_75) & (ap_const_lv1_0 == tmp_185_reg_1732));
end

/// ap_sig_bdd_158 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_158 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_167 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_167 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_178 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_178 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end

/// ap_sig_bdd_191 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_191 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_204 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_204 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_218 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_218 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end

/// ap_sig_bdd_243 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_243 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_262 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_262 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_271 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_271 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3F]);
end

/// ap_sig_bdd_280 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_280 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_40]);
end

/// ap_sig_bdd_291 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_291 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_48]);
end

/// ap_sig_bdd_311 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_311 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_49]);
end

/// ap_sig_bdd_326 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_326 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4A]);
end

/// ap_sig_bdd_339 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_339 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4B]);
end

/// ap_sig_bdd_348 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_348 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4C]);
end

/// ap_sig_bdd_367 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_367 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4D]);
end

/// ap_sig_bdd_381 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_381 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4F]);
end

/// ap_sig_bdd_399 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_399 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_50]);
end

/// ap_sig_bdd_422 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_422 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_51]);
end

/// ap_sig_bdd_439 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_439 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_52]);
end

/// ap_sig_bdd_449 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_449 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_53]);
end

/// ap_sig_bdd_458 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_458 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_59]);
end

/// ap_sig_bdd_473 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_473 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5A]);
end

/// ap_sig_bdd_484 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_484 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_522 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_522 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5C]);
end

/// ap_sig_bdd_530 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_530 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5E]);
end

/// ap_sig_bdd_538 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_538 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_60]);
end

/// ap_sig_bdd_551 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_551 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5B]);
end
assign brmerge40_demorgan_i2_fu_839_p2 = (newsignbit_11_reg_1673 & deleted_ones_reg_1684);
assign brmerge40_demorgan_i_i2_fu_1302_p2 = (signbit_5_reg_1798 & newsignbit_13_reg_1813);
assign brmerge40_demorgan_i_i_fu_1094_p2 = (signbit_4_reg_1746 & newsignbit_12_fu_1025_p3);
assign brmerge40_i2_fu_843_p2 = (brmerge40_demorgan_i2_fu_839_p2 ^ ap_const_lv1_1);
assign brmerge40_i_i2_fu_1306_p2 = (brmerge40_demorgan_i_i2_fu_1302_p2 ^ ap_const_lv1_1);
assign brmerge40_i_i_fu_1099_p2 = (brmerge40_demorgan_i_i_fu_1094_p2 ^ ap_const_lv1_1);
assign brmerge6_fu_567_p2 = (overflow_8_fu_521_p2 | underflow_31_not_fu_561_p2);
assign brmerge7_fu_877_p2 = (overflow_9_fu_833_p2 | underflow_32_not_fu_871_p2);
assign brmerge8_fu_1141_p2 = (overflow_11_reg_1777 | underflow_33_not_fu_1136_p2);
assign brmerge9_fu_1346_p2 = (overflow_10_fu_1296_p2 | underflow_34_not_fu_1340_p2);
assign brmerge_fu_601_p2 = (tmp_s_fu_473_p2 | tmp_120_fu_481_p2);
assign brmerge_i4_fu_823_p2 = (newsignbit_11_reg_1673 | p_not_i3_fu_818_p2);
assign brmerge_i_i1_fu_1291_p2 = (newsignbit_13_reg_1813 | p_not_i_i2_fu_1285_p2);
assign brmerge_i_i8_fu_865_p2 = (underflow_7_fu_860_p2 | overflow_9_fu_833_p2);
assign brmerge_i_i9_fu_1082_p2 = (newsignbit_12_fu_1025_p3 | p_not_i_i_fu_1076_p2);
assign brmerge_i_i_fu_555_p2 = (underflow_6_fu_549_p2 | overflow_8_fu_521_p2);
assign brmerge_i_i_i3_fu_1132_p2 = (underflow_8_reg_1783 | overflow_11_reg_1777);
assign brmerge_i_i_i4_fu_1334_p2 = (underflow_9_fu_1329_p2 | overflow_10_fu_1296_p2);
assign carry_4_fu_750_p2 = (tmp_180_reg_1641 & tmp_130_fu_744_p2);
assign carry_5_fu_1039_p2 = (tmp_196_reg_1760 & tmp_149_fu_1033_p2);
assign carry_6_fu_1245_p2 = (tmp_189_fu_1194_p3 & tmp_139_fu_1239_p2);
assign carry_fu_1480_p2 = (tmp_201_reg_1926 & tmp_148_fu_1474_p2);
assign deleted_ones_fu_789_p3 = ((carry_4_fu_750_p2)? p_41_i2_fu_783_p2: Range1_all_ones_fu_760_p2);
assign deleted_zeros_4_fu_1055_p2 = (signbit_4_reg_1746 ^ not_carry_5_fu_1049_p2);
assign deleted_zeros_5_fu_1265_p2 = (signbit_5_reg_1798 ^ not_carry_6_fu_1261_p2);
assign deleted_zeros_fu_770_p3 = ((carry_4_fu_750_p2)? Range1_all_ones_fu_760_p2: Range1_all_zeros_fu_765_p2);
assign exitcond_fu_613_p2 = (i_op_assign_reg_367 == ap_const_lv5_11? 1'b1: 1'b0);
assign exp_V_fu_418_p4 = {{res_V_fu_415_p1[ap_const_lv32_3E : ap_const_lv32_34]}};
assign exp_V_s_fu_428_p2 = ($signed(exp_V_fu_418_p4) + $signed(ap_const_lv11_7F0));
assign gradientLUT_V_address0 = tmp_127_reg_1858;
assign grp_fu_1413_ce = ap_const_logic_1;
assign grp_fu_1413_p0 = grp_fu_1413_p00;
assign grp_fu_1413_p00 = gradientLUT_V_load_reg_1901;
assign grp_fu_1413_p1 = OP2_V_cast_reg_1588;
assign grp_fu_406_ce = ap_const_logic_1;
assign grp_fu_406_opcode = ap_const_lv5_4;
assign grp_fu_406_p0 = p_Result_s_fu_434_p5;
assign grp_fu_406_p1 = ap_const_lv64_3FB999999999999A;
assign grp_fu_411_ce = ap_const_logic_1;
assign grp_fu_411_p0 = WBSlave_log_in_V;
assign grp_fu_623_ce = ap_const_logic_1;
assign grp_fu_623_p0 = OP2_V_reg_1593;
assign grp_fu_623_p1 = power_reg_356;
assign grp_fu_632_ce = ap_const_logic_1;
assign grp_fu_632_p0 = ap_const_lv49_1000000000000;
assign grp_fu_632_p1 = grp_fu_632_p10;
assign grp_fu_632_p10 = i_op_assign_reg_367;
assign grp_fu_911_ce = ap_const_logic_1;
assign grp_fu_911_p0 = grp_fu_911_p00;
assign grp_fu_911_p00 = r_V_reg_1705;
assign grp_fu_911_p1 = power_V_reg_1699;
assign i_11_fu_1372_p2 = (i_reg_394 + ap_const_lv6_1);
assign i_12_fu_1161_p2 = (i_op_assign_reg_367 + ap_const_lv5_1);
assign inputLUT_V_load_1_cast_fu_1401_p1 = inputLUT_V_q0;
assign inputLUT_V_load_cast_fu_1383_p1 = inputLUT_V_q0;
assign isneg_6_fu_1518_p3 = p_Val2_48_fu_1513_p2[ap_const_lv32_14];
assign isneg_fu_495_p3 = p_Val2_34_fu_489_p2[ap_const_lv32_15];
assign logLUT_V_address0 = tmp_127_reg_1858;
assign neg_trg_10_fu_507_p3 = p_Val2_34_fu_489_p2[ap_const_lv32_14];
assign newsignbit_11_fu_736_p3 = p_Val2_15_fu_731_p2[ap_const_lv32_14];
assign newsignbit_12_fu_1025_p3 = p_Val2_42_fu_1020_p2[ap_const_lv32_14];
assign newsignbit_13_fu_1231_p3 = p_Val2_39_fu_1225_p2[ap_const_lv32_14];
assign newsignbit_fu_1466_p3 = p_Val2_45_fu_1457_p2[ap_const_lv32_14];
assign not_carry_5_fu_1049_p2 = (newsignbit_12_fu_1025_p3 | p_Result_52_not_fu_1044_p2);
assign not_carry_6_fu_1261_p2 = (newsignbit_13_reg_1813 | p_Result_55_not_reg_1825);
assign notlhs_fu_455_p2 = (exp_V_s_fu_428_p2 != ap_const_lv11_7FF? 1'b1: 1'b0);
assign notrhs_fu_461_p2 = (tmp_172_fu_451_p1 == ap_const_lv52_0? 1'b1: 1'b0);
assign offsetLUT_V_address0 = tmp_127_reg_1858;
assign overflow_10_fu_1296_p2 = (brmerge_i_i1_fu_1291_p2 & tmp_140_fu_1270_p2);
assign overflow_11_fu_1088_p2 = (brmerge_i_i9_fu_1082_p2 & tmp_150_fu_1060_p2);
assign overflow_8_fu_521_p2 = (neg_trg_10_fu_507_p3 & tmp_122_fu_515_p2);
assign overflow_9_fu_833_p2 = (brmerge_i4_fu_823_p2 & tmp_133_fu_828_p2);
assign overflow_fu_1496_p2 = (tmp8_fu_1490_p2 | carry_fu_1480_p2);
assign p_38_i2_fu_797_p2 = (carry_4_fu_750_p2 & Range1_all_ones_fu_760_p2);
assign p_38_i_i2_fu_1275_p2 = (carry_6_reg_1820 & signbit_5_reg_1798);
assign p_38_i_i_fu_1065_p2 = (carry_5_fu_1039_p2 & signbit_4_reg_1746);
assign p_41_i2_fu_783_p2 = (Range2_all_ones_fu_755_p2 & tmp_131_fu_778_p2);
assign p_Result_52_not_fu_1044_p2 = (tmp_196_reg_1760 ^ ap_const_lv1_1);
assign p_Result_55_not_fu_1251_p2 = (tmp_189_fu_1194_p3 ^ ap_const_lv1_1);
assign p_Result_s_fu_434_p5 = {{res_V_fu_415_p1[32'd63 : 32'd63]}, {exp_V_s_fu_428_p2}, {res_V_fu_415_p1[32'd51 : 32'd0]}};
assign p_Val2_15_fu_731_p2 = (p_Val2_14_reg_1626 + tmp_129_fu_727_p1);
assign p_Val2_34_fu_489_p2 = ($signed(tmp_121_fu_486_p1) + $signed(ap_const_lv22_3F0000));
assign p_Val2_35_fu_503_p1 = p_Val2_34_fu_489_p2[20:0];
assign p_Val2_37_fu_1167_p2 = ($signed(tmp_174_cast_reg_1720) + $signed(tmp_175_cast_reg_1726));
assign p_Val2_38_fu_1179_p4 = {{p_Val2_37_fu_1167_p2[ap_const_lv32_44 : ap_const_lv32_30]}};
assign p_Val2_39_fu_1225_p2 = (p_Val2_38_fu_1179_p4 + tmp_138_fu_1221_p1);
assign p_Val2_40_fu_949_p2 = ($signed(tmp_174_cast_reg_1720) - $signed(tmp_175_cast_reg_1726));
assign p_Val2_41_mux_fu_1352_p3 = ((brmerge_i_i_i4_fu_1334_p2)? ap_const_lv21_FFFFF: p_Val2_39_reg_1807);
assign p_Val2_42_fu_1020_p2 = (p_Val2_41_reg_1755 + tmp_146_fu_1017_p1);
assign p_Val2_44_mux_fu_573_p3 = ((brmerge_i_i_fu_555_p2)? ap_const_lv21_FFFFF: p_Val2_35_fu_503_p1);
assign p_Val2_45_fu_1457_p2 = (p_Val2_44_reg_1916 + tmp_147_fu_1454_p1);
assign p_Val2_46_fu_1502_p3 = ((overflow_fu_1496_p2)? ap_const_lv20_FFFFF: tmp_202_fu_1462_p1);
assign p_Val2_48_fu_1513_p2 = (p_Val2_47_reg_1906 + p_Val2_68_cast_fu_1510_p1);
assign p_Val2_50_mux_fu_883_p3 = ((brmerge_i_i8_fu_865_p2)? ap_const_lv21_FFFFF: p_Val2_15_reg_1667);
assign p_Val2_59_mux_fu_1146_p3 = ((brmerge_i_i_i3_fu_1132_p2)? ap_const_lv21_FFFFF: p_Val2_42_reg_1771);
assign p_Val2_68_cast_fu_1510_p1 = p_Val2_46_reg_1936;
assign p_Val2_6_fu_890_p3 = ((underflow_7_fu_860_p2)? ap_const_lv21_100001: p_Val2_15_reg_1667);
assign p_Val2_7_fu_1154_p3 = ((underflow_8_reg_1783)? ap_const_lv21_100001: p_Val2_42_reg_1771);
assign p_Val2_8_fu_1359_p3 = ((underflow_9_fu_1329_p2)? ap_const_lv21_100001: p_Val2_39_reg_1807);
assign p_Val2_s_41_fu_581_p3 = ((underflow_6_fu_549_p2)? ap_const_lv21_100001: p_Val2_35_fu_503_p1);
assign p_not_i3_fu_818_p2 = (deleted_zeros_reg_1679 ^ ap_const_lv1_1);
assign p_not_i_i2_fu_1285_p2 = (deleted_zeros_5_fu_1265_p2 ^ ap_const_lv1_1);
assign p_not_i_i_fu_1076_p2 = (deleted_zeros_4_fu_1055_p2 ^ ap_const_lv1_1);
assign power_V_fu_897_p3 = ((brmerge7_fu_877_p2)? p_Val2_50_mux_fu_883_p3: p_Val2_6_fu_890_p3);
assign qb_assign_1_fu_1216_p2 = (r_i_i_i2_fu_1210_p2 & qbit_7_reg_1736);
assign qb_assign_2_fu_1011_p2 = (r_i_i_i_fu_1005_p2 & qbit_6_fu_971_p3);
assign qb_assign_s_fu_722_p2 = (r_i_i3_fu_717_p2 & qbit_5_reg_1631);
assign qbit_6_fu_971_p3 = p_Val2_40_fu_949_p2[ap_const_lv32_2F];
assign r_5_fu_983_p2 = (tmp_195_fu_979_p1 != ap_const_lv47_0? 1'b1: 1'b0);
assign r_6_fu_1189_p2 = (tmp_188_reg_1741 != ap_const_lv47_0? 1'b1: 1'b0);
assign r_fu_712_p2 = (tmp_179_reg_1636 != ap_const_lv15_0? 1'b1: 1'b0);
assign r_i_i3_fu_717_p2 = (tmp_181_reg_1646 | r_fu_712_p2);
assign r_i_i_i2_fu_1210_p2 = (tmp_190_fu_1202_p3 | r_6_fu_1189_p2);
assign r_i_i_i_fu_1005_p2 = (tmp_197_fu_997_p3 | r_5_fu_983_p2);
assign res_V_fu_415_p1 = dp_s_reg_1573;
assign this_assign_1_fu_1542_p3 = ((underflow_fu_1536_p2)? ap_const_lv21_100001: p_Val2_48_fu_1513_p2);
assign tmp10_fu_1121_p2 = (tmp_153_fu_1115_p2 & tmp_151_fu_1070_p2);
assign tmp11_fu_1323_p2 = (tmp_143_fu_1317_p2 & tmp_141_fu_1279_p2);
assign tmp8_fu_1490_p2 = (Range1_all_zeros_not_fu_1485_p2 | newsignbit_fu_1466_p3);
assign tmp9_fu_854_p2 = (tmp_135_fu_849_p2 & tmp_132_fu_813_p2);
assign tmp_118_fu_467_p2 = (notrhs_fu_461_p2 | notlhs_fu_455_p2);
assign tmp_120_fu_481_p2 = (tmp_118_reg_1583 & grp_fu_406_p2);
assign tmp_121_fu_486_p1 = $signed(WBSlave_log_in_V);
assign tmp_122_fu_515_p2 = (isneg_fu_495_p3 ^ ap_const_lv1_1);
assign tmp_123_fu_527_p2 = (neg_trg_10_fu_507_p3 ^ ap_const_lv1_1);
assign tmp_124_fu_537_p2 = (tmp_176_fu_533_p1 == ap_const_lv20_0? 1'b1: 1'b0);
assign tmp_125_fu_543_p2 = (tmp_124_fu_537_p2 | tmp_123_fu_527_p2);
assign tmp_126_fu_1366_p2 = (i_reg_394 < ap_const_lv6_23? 1'b1: 1'b0);
assign tmp_127_fu_1378_p1 = i_reg_394;
assign tmp_128_fu_1387_p2 = (WBSlave_log_in_V == inputLUT_V_load_cast_fu_1383_p1? 1'b1: 1'b0);
assign tmp_129_fu_727_p1 = qb_assign_s_fu_722_p2;
assign tmp_130_fu_744_p2 = (newsignbit_11_fu_736_p3 ^ ap_const_lv1_1);
assign tmp_131_fu_778_p2 = (tmp_183_reg_1651 ^ ap_const_lv1_1);
assign tmp_132_fu_813_p2 = (p_38_i2_reg_1689 ^ ap_const_lv1_1);
assign tmp_133_fu_828_p2 = (signbit_reg_1620 ^ ap_const_lv1_1);
assign tmp_134_fu_807_p2 = (tmp_184_fu_803_p1 == ap_const_lv20_0? 1'b1: 1'b0);
assign tmp_135_fu_849_p2 = (tmp_134_reg_1694 | brmerge40_i2_fu_843_p2);
assign tmp_136_fu_917_p3 = {{p_Val2_36_reg_343}, {ap_const_lv48_0}};
assign tmp_137_fu_1392_p2 = ($signed(WBSlave_log_in_V) > $signed(inputLUT_V_load_cast_fu_1383_p1)? 1'b1: 1'b0);
assign tmp_138_fu_1221_p1 = qb_assign_1_fu_1216_p2;
assign tmp_139_fu_1239_p2 = (newsignbit_13_fu_1231_p3 ^ ap_const_lv1_1);
assign tmp_140_fu_1270_p2 = (signbit_5_reg_1798 ^ ap_const_lv1_1);
assign tmp_141_fu_1279_p2 = (p_38_i_i2_fu_1275_p2 ^ ap_const_lv1_1);
assign tmp_142_fu_1312_p2 = (tmp_192_reg_1830 == ap_const_lv20_0? 1'b1: 1'b0);
assign tmp_143_fu_1317_p2 = (tmp_142_fu_1312_p2 | brmerge40_i_i2_fu_1306_p2);
assign tmp_144_fu_1397_p1 = i_11_reg_1852;
assign tmp_145_fu_1405_p2 = ($signed(WBSlave_log_in_V) < $signed(inputLUT_V_load_1_cast_fu_1401_p1)? 1'b1: 1'b0);
assign tmp_146_fu_1017_p1 = qb_assign_2_reg_1766;
assign tmp_147_fu_1454_p1 = qbit_reg_1921;
assign tmp_148_fu_1474_p2 = (newsignbit_fu_1466_p3 ^ ap_const_lv1_1);
assign tmp_149_fu_1033_p2 = (newsignbit_12_fu_1025_p3 ^ ap_const_lv1_1);
assign tmp_150_fu_1060_p2 = (signbit_4_reg_1746 ^ ap_const_lv1_1);
assign tmp_151_fu_1070_p2 = (p_38_i_i_fu_1065_p2 ^ ap_const_lv1_1);
assign tmp_152_fu_1109_p2 = (tmp_199_fu_1105_p1 == ap_const_lv20_0? 1'b1: 1'b0);
assign tmp_153_fu_1115_p2 = (tmp_152_fu_1109_p2 | brmerge40_i_i_fu_1099_p2);
assign tmp_155_fu_1530_p2 = (tmp_205_fu_1526_p1 == ap_const_lv20_0? 1'b1: 1'b0);
assign tmp_156_fu_1551_p2 = (WBSlave_log_start_V_read_reg_1602 ^ ap_const_lv1_1);
assign tmp_172_fu_451_p1 = res_V_fu_415_p1[51:0];
assign tmp_174_cast_fu_925_p1 = $signed(tmp_136_fu_917_p3);
assign tmp_175_cast_fu_929_p1 = grp_fu_911_p2;
assign tmp_176_fu_533_p1 = p_Val2_34_fu_489_p2[19:0];
assign tmp_179_fu_664_p1 = grp_fu_623_p2[14:0];
assign tmp_184_fu_803_p1 = p_Val2_15_fu_731_p2[19:0];
assign tmp_185_fu_933_p1 = i_op_assign_reg_367[0:0];
assign tmp_188_fu_945_p1 = grp_fu_911_p2[46:0];
assign tmp_189_fu_1194_p3 = p_Val2_37_fu_1167_p2[ap_const_lv32_44];
assign tmp_190_fu_1202_p3 = p_Val2_37_fu_1167_p2[ap_const_lv32_30];
assign tmp_192_fu_1257_p1 = p_Val2_39_fu_1225_p2[19:0];
assign tmp_195_fu_979_p1 = p_Val2_40_fu_949_p2[46:0];
assign tmp_197_fu_997_p3 = p_Val2_40_fu_949_p2[ap_const_lv32_30];
assign tmp_199_fu_1105_p1 = p_Val2_42_fu_1020_p2[19:0];
assign tmp_202_fu_1462_p1 = p_Val2_45_fu_1457_p2[19:0];
assign tmp_205_fu_1526_p1 = p_Val2_48_fu_1513_p2[19:0];
assign tmp_s_fu_473_p2 = (WBSlave_log_in_V == ap_const_lv21_0? 1'b1: 1'b0);
assign underflow_31_not_fu_561_p2 = (underflow_6_fu_549_p2 ^ ap_const_lv1_1);
assign underflow_32_not_fu_871_p2 = (underflow_7_fu_860_p2 ^ ap_const_lv1_1);
assign underflow_33_not_fu_1136_p2 = (underflow_8_reg_1783 ^ ap_const_lv1_1);
assign underflow_34_not_fu_1340_p2 = (underflow_9_fu_1329_p2 ^ ap_const_lv1_1);
assign underflow_6_fu_549_p2 = (isneg_fu_495_p3 & tmp_125_fu_543_p2);
assign underflow_7_fu_860_p2 = (tmp9_fu_854_p2 & signbit_reg_1620);
assign underflow_8_fu_1127_p2 = (tmp10_fu_1121_p2 & signbit_4_reg_1746);
assign underflow_9_fu_1329_p2 = (tmp11_fu_1323_p2 & signbit_5_reg_1798);
assign underflow_fu_1536_p2 = (isneg_6_fu_1518_p3 & tmp_155_fu_1530_p2);
assign x_V_fu_589_p3 = ((brmerge6_fu_567_p2)? p_Val2_44_mux_fu_573_p3: p_Val2_s_41_fu_581_p3);
always @ (posedge ap_clk)
begin
    OP2_V_cast_reg_1588[43:21] <= 23'b00000000000000000000000;
    tmp_174_cast_reg_1720[47:0] <= 48'b000000000000000000000000000000000000000000000000;
    tmp_127_reg_1858[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end



endmodule //WBSlave_getLog

